(self["webpackChunk"] = self["webpackChunk"] || []).push([["app"],{

/***/ "./assets/controllers sync recursive ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js! \\.[jt]sx?$":
/*!****************************************************************************************************************!*\
  !*** ./assets/controllers/ sync ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js! \.[jt]sx?$ ***!
  \****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./hello_controller.js": "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/hello_controller.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./assets/controllers sync recursive ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js! \\.[jt]sx?$";

/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/dist/webpack/loader.js!./assets/controllers.json":
/*!************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/dist/webpack/loader.js!./assets/controllers.json ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
});

/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/hello_controller.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/hello_controller.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _default)
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_set_prototype_of_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.set-prototype-of.js */ "./node_modules/core-js/modules/es.object.set-prototype-of.js");
/* harmony import */ var core_js_modules_es_object_set_prototype_of_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_set_prototype_of_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.object.get-prototype-of.js */ "./node_modules/core-js/modules/es.object.get-prototype-of.js");
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.reflect.to-string-tag.js */ "./node_modules/core-js/modules/es.reflect.to-string-tag.js");
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.reflect.construct.js */ "./node_modules/core-js/modules/es.reflect.construct.js");
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_error_cause_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.error.cause.js */ "./node_modules/core-js/modules/es.error.cause.js");
/* harmony import */ var core_js_modules_es_error_cause_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_error_cause_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_error_to_string_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.error.to-string.js */ "./node_modules/core-js/modules/es.error.to-string.js");
/* harmony import */ var core_js_modules_es_error_to_string_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_error_to_string_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_object_create_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.object.create.js */ "./node_modules/core-js/modules/es.object.create.js");
/* harmony import */ var core_js_modules_es_object_create_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_create_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
/* harmony import */ var core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }



















function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


/*
 * This is an example Stimulus controller!
 *
 * Any element with a data-controller="hello" attribute will cause
 * this controller to be executed. The name "hello" comes from the filename:
 * hello_controller.js -> "hello"
 *
 * Delete this file or adapt it for your use!
 */
var _default = /*#__PURE__*/function (_Controller) {
  _inherits(_default, _Controller);
  var _super = _createSuper(_default);
  function _default() {
    _classCallCheck(this, _default);
    return _super.apply(this, arguments);
  }
  _createClass(_default, [{
    key: "connect",
    value: function connect() {
      this.element.textContent = 'Hello Stimulus! Edit me in assets/controllers/hello_controller.js';
    }
  }]);
  return _default;
}(_hotwired_stimulus__WEBPACK_IMPORTED_MODULE_19__.Controller);


/***/ }),

/***/ "./assets/app.js":
/*!***********************!*\
  !*** ./assets/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.string.trim.js */ "./node_modules/core-js/modules/es.string.trim.js");
/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _styles_app_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styles/app.css */ "./assets/styles/app.css");
/* harmony import */ var _vendor_bootstrap_icons_font_bootstrap_icons_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./vendor/bootstrap-icons/font/bootstrap-icons.css */ "./assets/vendor/bootstrap-icons/font/bootstrap-icons.css");
/* harmony import */ var _vendor_hs_mega_menu_dist_hs_mega_menu_min_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./vendor/hs-mega-menu/dist/hs-mega-menu.min.css */ "./assets/vendor/hs-mega-menu/dist/hs-mega-menu.min.css");
/* harmony import */ var _vendor_hs_video_bg_dist_hs_video_bg_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vendor/hs-video-bg/dist/hs-video-bg.css */ "./assets/vendor/hs-video-bg/dist/hs-video-bg.css");
/* harmony import */ var _vendor_swiper_swiper_bundle_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vendor/swiper/swiper-bundle.css */ "./assets/vendor/swiper/swiper-bundle.css");
/* harmony import */ var _styles_theme_min_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./styles/theme.min.css */ "./assets/styles/theme.min.css");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var popper_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! popper.js */ "./node_modules/popper.js/dist/esm/popper.js");
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap/dist/js/bootstrap.esm.js");
/* harmony import */ var _vendor_hs_header_dist_hs_header_min_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./vendor/hs-header/dist/hs-header.min.js */ "./assets/vendor/hs-header/dist/hs-header.min.js");
/* harmony import */ var _vendor_hs_header_dist_hs_header_min_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_vendor_hs_header_dist_hs_header_min_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _vendor_hs_sticky_block_dist_hs_sticky_block_min_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./vendor/hs-sticky-block/dist/hs-sticky-block.min.js */ "./assets/vendor/hs-sticky-block/dist/hs-sticky-block.min.js");
/* harmony import */ var _vendor_hs_sticky_block_dist_hs_sticky_block_min_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_vendor_hs_sticky_block_dist_hs_sticky_block_min_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _vendor_hs_mega_menu_dist_hs_mega_menu_min_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./vendor/hs-mega-menu/dist/hs-mega-menu.min.js */ "./assets/vendor/hs-mega-menu/dist/hs-mega-menu.min.js");
/* harmony import */ var _vendor_hs_mega_menu_dist_hs_mega_menu_min_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_vendor_hs_mega_menu_dist_hs_mega_menu_min_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _vendor_hs_go_to_dist_hs_go_to_min_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./vendor/hs-go-to/dist/hs-go-to.min.js */ "./assets/vendor/hs-go-to/dist/hs-go-to.min.js");
/* harmony import */ var _vendor_hs_go_to_dist_hs_go_to_min_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_vendor_hs_go_to_dist_hs_go_to_min_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var swiper_bundle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! swiper/bundle */ "./node_modules/swiper/swiper-bundle.esm.js");
/* harmony import */ var _vendor_hs_video_bg_dist_hs_video_bg_min_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./vendor/hs-video-bg/dist/hs-video-bg.min.js */ "./assets/vendor/hs-video-bg/dist/hs-video-bg.min.js");
/* harmony import */ var _vendor_hs_video_bg_dist_hs_video_bg_min_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_vendor_hs_video_bg_dist_hs_video_bg_min_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _vendor_fslightbox_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./vendor/fslightbox/index.js */ "./assets/vendor/fslightbox/index.js");
/* harmony import */ var _vendor_fslightbox_index_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_vendor_fslightbox_index_js__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _js_theme_min_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./js/theme.min.js */ "./assets/js/theme.min.js");
/* harmony import */ var _js_theme_min_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_js_theme_min_js__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _bootstrap__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./bootstrap */ "./assets/bootstrap.js");




/* Welcome to your app's main JavaScript file! */

// any CSS you import will output into a single css file (app.css in this case)








// Importez les dépendances












// Assurez-vous que jQuery et Popper.js sont disponibles globalement (nécessaire pour certaines parties du thème Unify)
window.$ = window.jQuery = (jquery__WEBPACK_IMPORTED_MODULE_10___default());
window.Popper = popper_js__WEBPACK_IMPORTED_MODULE_20__["default"];

// start the Stimulus application

jquery__WEBPACK_IMPORTED_MODULE_10___default()(document).ready(function () {
  // INITIALIZATION OF NAVBAR
  // =======================================================
  new (_vendor_hs_header_dist_hs_header_min_js__WEBPACK_IMPORTED_MODULE_12___default())('#header').init();

  // INITIALIZATION OF MEGA MENU
  // =======================================================
  var megaMenu = new (_vendor_hs_mega_menu_dist_hs_mega_menu_min_js__WEBPACK_IMPORTED_MODULE_14___default())('.js-mega-menu', {
    desktop: {
      position: 'left'
    }
  });

  // INITIALIZATION OF VIDEO BG
  // =======================================================
  document.querySelectorAll('.js-video-bg').forEach(function (item) {
    new (_vendor_hs_video_bg_dist_hs_video_bg_min_js__WEBPACK_IMPORTED_MODULE_17___default())(item).init();
    console.log('video');
  });

  // INITIALIZATION OF GO TO
  // =======================================================
  new (_vendor_hs_go_to_dist_hs_go_to_min_js__WEBPACK_IMPORTED_MODULE_15___default())('.js-go-to');
  (function () {
    // INITIALIZATION OF SWIPER
    // =======================================================
    var sliderThumbs = new swiper_bundle__WEBPACK_IMPORTED_MODULE_16__["default"]('.js-swiper-blog-modern-hero-thumbs', {
      slidesPerView: 4,
      breakpoints: {
        580: {
          slidesPerView: 3,
          spaceBetween: 30
        },
        1024: {
          slidesPerView: 4,
          spaceBetween: 50
        }
      }
    });

    // Blog Modern Hero
    var swiper = new swiper_bundle__WEBPACK_IMPORTED_MODULE_16__["default"]('.js-swiper-blog-modern-hero', {
      effect: 'fade',
      autoplay: {
        delay: 11000
      },
      loop: true,
      pagination: {
        el: '.js-swiper-blog-modern-hero-pagination',
        clickable: true
      },
      thumbs: {
        swiper: sliderThumbs
      }
    });

    // Projets
    var swiper = new swiper_bundle__WEBPACK_IMPORTED_MODULE_16__["default"]('.js-swiper-card-grid', {
      navigation: {
        nextEl: '.js-swiper-card-grid-button-next',
        prevEl: '.js-swiper-card-grid-button-prev'
      },
      slidesPerView: 1,
      spaceBetween: 30,
      loop: 2,
      breakpoints: {
        480: {
          slidesPerView: 2
        },
        768: {
          slidesPerView: 2
        },
        1024: {
          slidesPerView: 3
        }
      }
    });
  })();

  // INITIALIZATION OF STICKY BLOCKS
  // =======================================================
  new (_vendor_hs_sticky_block_dist_hs_sticky_block_min_js__WEBPACK_IMPORTED_MODULE_13___default())('.js-sticky-block', {
    targetSelector: document.getElementById('header').classList.contains('navbar-fixed') ? '#header' : null
  });

  // Ajouter un événement de soumission du formulaire
  jquery__WEBPACK_IMPORTED_MODULE_10___default()('#envoiemail').on('click', function () {
    console.log(jquery__WEBPACK_IMPORTED_MODULE_10___default()('#envoiemail'));
    // Récupérer la valeur de l'e-mail
    var email = jquery__WEBPACK_IMPORTED_MODULE_10___default()('#champsemail').val();

    // Envoyer une requête AJAX
    jquery__WEBPACK_IMPORTED_MODULE_10___default().ajax({
      url: '/add-email',
      type: 'POST',
      data: {
        email: email
      },
      success: function success(response) {
        // Vider le champ email
        jquery__WEBPACK_IMPORTED_MODULE_10___default()('#champsemail').val('');
        // Afficher un message de succès
        alert(response.message);
      },
      error: function error(response) {
        // Afficher un message d'erreur
        alert('Une erreur est survenue lors de l\'enregistrement de l\'adresse e-mail.');
      }
    });
  });

  // email
  // =======================================================

  jquery__WEBPACK_IMPORTED_MODULE_10___default()('#button-send').on('click', function () {
    jquery__WEBPACK_IMPORTED_MODULE_10___default().ajax({
      url: '/send-email',
      type: 'POST',
      data: jquery__WEBPACK_IMPORTED_MODULE_10___default()('#contact-form').serialize(),
      success: function success(response) {
        if (response.success) {
          alert(response.message);
          jquery__WEBPACK_IMPORTED_MODULE_10___default()('#contact-form')[0].reset();
        } else {
          alert(response.message);
        }
      },
      error: function error(response) {
        alert('Une erreur est survenue lors de l\'envoi du message.');
      }
    });
  });
  var lightbox = new (_vendor_fslightbox_index_js__WEBPACK_IMPORTED_MODULE_18___default())();

  // Initialiser le plugin
  document.querySelectorAll('.js-fslightbox').forEach(function (element) {
    element.addEventListener('click', function (event) {
      event.preventDefault();
      lightbox.open(element.dataset.src.split(','));
    });
  });
});
jquery__WEBPACK_IMPORTED_MODULE_10___default()(document).ready(function () {
  if (window.location.pathname !== '/' && jquery__WEBPACK_IMPORTED_MODULE_10___default()(this).scrollTop() == 0) {
    jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenumoov').addClass('navbar-light');
    jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenumoov').removeClass('navbar-dark');
    jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenulink').removeClass('link-light');
  } else {
    jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenumoov').addClass('navbar-dark');
    jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenumoov').removeClass('navbar-light');
    jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenulink').addClass('link-light');
  }
  jquery__WEBPACK_IMPORTED_MODULE_10___default()(document).scroll(function () {
    if (window.location.pathname !== '/' && jquery__WEBPACK_IMPORTED_MODULE_10___default()(this).scrollTop() == 0) {
      jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenumoov').addClass('navbar-light');
      jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenumoov').removeClass('navbar-dark');
      jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenulink').removeClass('link-light');
    } else {
      jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenumoov').addClass('navbar-dark');
      jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenumoov').removeClass('navbar-light');
      jquery__WEBPACK_IMPORTED_MODULE_10___default()('.mymenulink').addClass('link-light');
    }
  });
});
jquery__WEBPACK_IMPORTED_MODULE_10___default()(document).ready(function () {
  // Vérifier la largeur de lécran à chaque changement de taille
  jquery__WEBPACK_IMPORTED_MODULE_10___default()(window).resize(function () {
    if (jquery__WEBPACK_IMPORTED_MODULE_10___default()(window).width() < 768) {
      jquery__WEBPACK_IMPORTED_MODULE_10___default()('.swiper-slide').removeClass('fullheight');
    } else {
      jquery__WEBPACK_IMPORTED_MODULE_10___default()('.swiper-slide').addClass('fullheight');
    }
  });
});
jquery__WEBPACK_IMPORTED_MODULE_10___default()(document).ready(function () {
  jquery__WEBPACK_IMPORTED_MODULE_10___default()('.highlight-text').each(function () {
    var textElement = jquery__WEBPACK_IMPORTED_MODULE_10___default()(this);
    var text = textElement.text();
    var lines = text.split('\n');
    var highlightedText = '';
    for (var i = 0; i < lines.length; i++) {
      var line = lines[i].trim();

      // Ajoutez un espace au début et à la fin de chaque ligne
      line = ' ' + line + ' ';

      // Ajoutez la classe "highlighted-line" pour le surlignage
      line = '<span class="highlight">' + line + '</span>';
      highlightedText += line;
    }
    textElement.html(highlightedText);
  });
});

/***/ }),

/***/ "./assets/bootstrap.js":
/*!*****************************!*\
  !*** ./assets/bootstrap.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "app": () => (/* binding */ app)
/* harmony export */ });
/* harmony import */ var _symfony_stimulus_bridge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @symfony/stimulus-bridge */ "./node_modules/@symfony/stimulus-bridge/dist/index.js");


// Registers Stimulus controllers from controllers.json and in the controllers/ directory
var app = (0,_symfony_stimulus_bridge__WEBPACK_IMPORTED_MODULE_0__.startStimulusApp)(__webpack_require__("./assets/controllers sync recursive ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js! \\.[jt]sx?$"));

// register any custom, 3rd party controllers here
// app.register('some_controller_name', SomeImportedController);

/***/ }),

/***/ "./assets/js/theme.min.js":
/*!********************************!*\
  !*** ./assets/js/theme.min.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/*
* HSCore
* @version: 2.0.0 (27 April, 2021)
* @author: HtmlStream
* @event-namespace: .HSCore
* @license: Htmlstream Libraries (https://htmlstream.com/licenses)
* Copyright 2021 Htmlstream
*/


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
__webpack_require__(/*! core-js/modules/es.array.map.js */ "./node_modules/core-js/modules/es.array.map.js");
__webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");
__webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
__webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
__webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
__webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
__webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
__webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
__webpack_require__(/*! core-js/modules/web.timers.js */ "./node_modules/core-js/modules/web.timers.js");
__webpack_require__(/*! core-js/modules/es.array.push.js */ "./node_modules/core-js/modules/es.array.push.js");
__webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
__webpack_require__(/*! core-js/modules/es.array.find.js */ "./node_modules/core-js/modules/es.array.find.js");
__webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
__webpack_require__(/*! core-js/modules/es.error.cause.js */ "./node_modules/core-js/modules/es.error.cause.js");
__webpack_require__(/*! core-js/modules/es.error.to-string.js */ "./node_modules/core-js/modules/es.error.to-string.js");
__webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
__webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! core-js/modules/es.object.keys.js */ "./node_modules/core-js/modules/es.object.keys.js");
__webpack_require__(/*! core-js/modules/es.array.filter.js */ "./node_modules/core-js/modules/es.array.filter.js");
__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ "./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ "./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ "./node_modules/core-js/modules/es.object.define-properties.js");
var HSCore = {
  init: function init() {
    [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map(function (e) {
      return new bootstrap.Tooltip(e);
    }), [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]')).map(function (e) {
      return new bootstrap.Popover(e);
    });
  },
  components: {}
};
HSCore.init();
var validators = {
    "data-hs-validation-equal-field": function dataHsValidationEqualField(e) {
      document.querySelector(e.getAttribute("data-hs-validation-equal-field"));
    }
  },
  HSBsValidation = {
    init: function init(e, t) {
      var _this = this;
      var i = document.querySelectorAll(e);
      return Array.prototype.slice.call(i).forEach(function (e) {
        for (var _t in validators) Array.prototype.slice.call(e.querySelectorAll("[".concat(_t, "]"))).forEach(validators[_t]);
        e.addEventListener("submit", function (i) {
          e.checkValidity() ? _this.onSubmit({
            event: i,
            form: e,
            options: t
          }) : (i.preventDefault(), i.stopPropagation()), e.classList.add("was-validated");
        }, !1);
      }), this;
    },
    onSubmit: function onSubmit(e) {
      return !(!e.options || "function" != typeof e.options.onSubmit) && e.options.onSubmit(e);
    }
  }
  /*
  * Leaflet wrapper
  * @version: 2.0.0 (Sat, 22 May 2021)
  * @requires: Leafletjs v1.6.0
  * @author: HtmlStream
  * @event-namespace: .HSCore.components.HSLeaflet
  * @license: Htmlstream Libraries (https://htmlstream.com/licenses)
  * Copyright 2021 Htmlstream
  */;
function isObject(e) {
  return e && "object" == _typeof(e) && !Array.isArray(e);
}
function mergeDeep(e) {
  for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    t[_key - 1] = arguments[_key];
  }
  if (!t.length) return e;
  var i = t.shift();
  if (isObject(e) && isObject(i)) for (var _t2 in i) isObject(i[_t2]) ? (e[_t2] || Object.assign(e, _defineProperty({}, _t2, {})), mergeDeep(e[_t2], i[_t2])) : Object.assign(e, _defineProperty({}, _t2, i[_t2]));
  return mergeDeep.apply(void 0, [e].concat(t));
}
HSCore.components.HSLeaflet = {
  init: function init(e, t) {
    if (this.$el = "string" == typeof e ? document.querySelector(e) : e, this.$el) {
      this.defaults = {
        map: {
          coords: [51.505, -.09],
          zoom: 13
        },
        layer: {
          token: "https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw",
          id: "mapbox/streets-v11",
          maxZoom: 18
        },
        marker: null
      };
      var i = this.$el.hasAttribute("data-hs-leaflet-options") ? JSON.parse(this.$el.getAttribute("data-hs-leaflet-options")) : {};
      this.settings = mergeDeep(this.defaults, _objectSpread(_objectSpread({}, t), i));
      var l = L.map(this.$el, this.settings.map);
      if (l.setView(this.settings.map.coords, this.settings.map.zoom), L.tileLayer(this.settings.layer.token, this.settings.layer).addTo(l), this.settings.marker) for (var s = 0; s < this.settings.marker.length; s++) {
        this.settings.marker[s].icon = L.icon(this.settings.marker[s].icon);
        var _e = L.marker(this.settings.marker[s].coords, this.settings.marker[s]).addTo(l);
        this.settings.marker[s].popup && _e.bindPopup(this.settings.marker[s].popup.text);
      }
      return l;
    }
  }
}, HSCore.components.HSList = {
  dataAttributeName: "data-hs-list-options",
  defaults: {
    searchMenu: !1,
    searchMenuDelay: 300,
    searchMenuOutsideClose: !0,
    searchMenuInsideClose: !0,
    clearSearchInput: !0,
    keyboard: !1,
    empty: !1
  },
  collection: [],
  init: function init(e, t, i) {
    var l = this;
    var s;
    s = e instanceof HTMLElement ? [e] : e instanceof Object ? e : document.querySelectorAll(e);
    for (var _e2 = 0; _e2 < s.length; _e2 += 1) l.addToCollection(s[_e2], t, i || s[_e2].id);
    return !!l.collection.length && (l._init(), this);
  },
  initializeHover: function initializeHover(e, t, i) {
    var l = this;
    var s = e.querySelector(".".concat(i.searchClass)),
      o = !1;
    s.addEventListener("keydown", function (n) {
      if (40 === n.which) n.preventDefault(), l.searchMenuShow(e, t, i), (a = i.list.querySelector(".active")) ? a.nextElementSibling && ((r = a.nextElementSibling).classList.add("active"), o.classList.remove("active"), o = r, i.list.offsetHeight < r.getBoundingClientRect().top && (i.list.scrollTop = r.getBoundingClientRect().top + i.list.scrollTop)) : (o = i.list.firstChild).classList.add("active");else if (38 === n.which) {
        var a, r;
        if (n.preventDefault(), a = i.list.querySelector(".active")) {
          if (a.previousElementSibling) (r = a.previousElementSibling).classList.add("active"), o.classList.remove("active"), o = r, 0 > r.getBoundingClientRect().top && (i.list.scrollTop = r.getBoundingClientRect().top + i.list.scrollTop - i.list.offsetHeight);
        } else (o = i.list.firstChild.parentNode).classList.add("active");
      } else if (13 == n.which && s.value.length > 0) {
        n.preventDefault();
        var _e3 = o.querySelector("a").getAttribute("href");
        _e3 && (window.location = _e3);
      }
    });
  },
  searchMenu: function searchMenu(e, t, i) {
    var l = this;
    if (0 === e.querySelector(".".concat(i.searchClass)).value.length || 0 === i.visibleItems.length && !t.empty) return l.helpers.fadeOut(i.list, t.searchMenuDelay), l.helpers.hide(t.empty);
    l.searchMenuShow(e, t, i);
  },
  searchMenuShow: function searchMenuShow(e, t, i) {
    var l = this;
    if (l.helpers.fadeIn(i.list, t.searchMenuDelay), !i.visibleItems.length) {
      var s = l.helpers.show(document.querySelector(t.empty).cloneNode(!0));
      i.list.innerHTML = s.outerHTML;
    }
  },
  searchMenuHide: function searchMenuHide(e, t, i) {
    var l = this;
    var s = e.querySelector(".".concat(i.searchClass));
    t.searchMenuOutsideClose && document.addEventListener("click", function () {
      l.helpers.fadeOut(i.list, t.searchMenuDelay), t.clearSearchInput && (s.value = "");
    }), t.searchMenuInsideClose || i.list.addEventListener("click", function (e) {
      e.stopPropagation(), t.clearSearchInput && s.val("");
    });
  },
  emptyBlock: function emptyBlock(e, t, i) {
    var l = this;
    if (0 === e.querySelector(".".concat(i.searchClass)).value.length || 0 === i.visibleItems.length && !t.empty) l.helpers.hide(t.empty);else if (l.helpers.fadeIn(i.list, t.searchMenuDelay), !i.visibleItems.length) {
      var s = document.querySelector(t.empty).clone();
      l.helpers.show(s), i.list.innerHTML = s.outerHTML;
    }
  },
  helpers: {
    fadeIn: function fadeIn(e, t) {
      if (!e || null !== e.offsetParent) return e;
      e.style.opacity = 0, e.style.display = "block";
      var i = +new Date(),
        l = function l() {
          e.style.opacity = +e.style.opacity + (new Date() - i) / t, i = +new Date(), +e.style.opacity < 1 && (window.requestAnimationFrame && requestAnimationFrame(l) || setTimeout(l, 16));
        };
      l();
    },
    fadeOut: function fadeOut(e, t) {
      if (!e || null === e.offsetParent) return e;
      if (!t) return e.style.display = "none";
      var i = setInterval(function () {
        e.style.opacity || (e.style.opacity = 1), e.style.opacity > 0 ? e.style.opacity -= .1 : (clearInterval(i), e.style.display = "none");
      }, t / 10);
    },
    hide: function hide(e) {
      return (e = "object" == _typeof(e) ? e : document.querySelector(e)) && (e.style.display = "none"), e;
    },
    show: function show(e) {
      return (e = "object" == _typeof(e) ? e : document.querySelector(e)) && (e.style.display = "block"), e;
    }
  },
  addToCollection: function addToCollection(e, t, i) {
    var l = this;
    this.collection.push({
      $el: e,
      id: i || null,
      options: Object.assign({}, l.defaults, e.hasAttribute(l.dataAttributeName) ? JSON.parse(e.getAttribute(l.dataAttributeName)) : {}, t)
    });
  },
  _init: function _init() {
    var e = this;
    var _loop = function _loop(t) {
      var i, l;
      e.collection[t].hasOwnProperty("$initializedEl") || (i = e.collection[t].$el, l = e.collection[t].options, e.collection[t].$initializedEl = new List(i, l, l.values), l.searchMenu && e.helpers.hide(e.collection[t].$initializedEl.list), e.collection[t].$initializedEl.on("searchComplete", function () {
        l.searchMenu && (e.searchMenu(i, l, e.collection[t].$initializedEl), e.searchMenuHide(i, l, e.collection[t].$initializedEl)), !l.searchMenu && l.empty && e.emptyBlock(i, l, e.collection[t].$initializedEl);
      }), l.searchMenu && l.keyboard && e.initializeHover(i, l, e.collection[t].$initializedEl));
    };
    for (var t = 0; t < e.collection.length; t += 1) {
      _loop(t);
    }
  },
  getItem: function getItem(e) {
    return "number" == typeof e ? this.collection[e].$initializedEl : this.collection.find(function (t) {
      return t.id === e;
    }).$initializedEl;
  }
}, HSCore.components.HSTyped = {
  collection: [],
  dataAttributeName: "data-hs-typed-options",
  defaults: {},
  init: function init(e, t, i) {
    var l = this;
    var s;
    s = e instanceof HTMLElement ? [e] : e instanceof Object ? e : document.querySelectorAll(e);
    for (var _e4 = 0; _e4 < s.length; _e4 += 1) l.addToCollection(s[_e4], t, i || s[_e4].id);
    if (!l.collection.length) return !1;
    l._init();
  },
  addToCollection: function addToCollection(e, t, i) {
    var l = this;
    this.collection.push({
      $el: e,
      id: i || null,
      options: Object.assign({}, l.defaults, e.hasAttribute(l.dataAttributeName) ? JSON.parse(e.getAttribute(l.dataAttributeName)) : {}, t)
    });
  },
  _init: function _init() {
    var e = this;
    for (var t = 0; t < e.collection.length; t += 1) {
      var i = void 0,
        l = void 0;
      e.collection[t].hasOwnProperty("$initializedEl") || (i = e.collection[t].$el, l = e.collection[t].options, e.collection[t].$initializedEl = new Typed(i, l));
    }
  }
};

/***/ }),

/***/ "./assets/vendor/fslightbox/index.js":
/*!*******************************************!*\
  !*** ./assets/vendor/fslightbox/index.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! core-js/modules/es.symbol.to-string-tag.js */ "./node_modules/core-js/modules/es.symbol.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.json.to-string-tag.js */ "./node_modules/core-js/modules/es.json.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.math.to-string-tag.js */ "./node_modules/core-js/modules/es.math.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.object.create.js */ "./node_modules/core-js/modules/es.object.create.js");
__webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
__webpack_require__(/*! core-js/modules/es.json.stringify.js */ "./node_modules/core-js/modules/es.json.stringify.js");
__webpack_require__(/*! core-js/modules/web.timers.js */ "./node_modules/core-js/modules/web.timers.js");
__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
__webpack_require__(/*! core-js/modules/es.string.match.js */ "./node_modules/core-js/modules/es.string.match.js");
__webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
__webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");
__webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
__webpack_require__(/*! core-js/modules/es.array.push.js */ "./node_modules/core-js/modules/es.array.push.js");
__webpack_require__(/*! core-js/modules/es.error.to-string.js */ "./node_modules/core-js/modules/es.error.to-string.js");
__webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
__webpack_require__(/*! core-js/modules/es.reflect.construct.js */ "./node_modules/core-js/modules/es.reflect.construct.js");
__webpack_require__(/*! core-js/modules/es.reflect.to-string-tag.js */ "./node_modules/core-js/modules/es.reflect.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.object.set-prototype-of.js */ "./node_modules/core-js/modules/es.object.set-prototype-of.js");
__webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
__webpack_require__(/*! core-js/modules/es.array.from.js */ "./node_modules/core-js/modules/es.array.from.js");
__webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
__webpack_require__(/*! core-js/modules/es.regexp.test.js */ "./node_modules/core-js/modules/es.regexp.test.js");
__webpack_require__(/*! core-js/modules/es.error.cause.js */ "./node_modules/core-js/modules/es.error.cause.js");
__webpack_require__(/*! core-js/modules/es.string.substr.js */ "./node_modules/core-js/modules/es.string.substr.js");
__webpack_require__(/*! core-js/modules/es.object.keys.js */ "./node_modules/core-js/modules/es.object.keys.js");
__webpack_require__(/*! core-js/modules/es.array.unshift.js */ "./node_modules/core-js/modules/es.array.unshift.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (e, t) {
  if ("object" == ( false ? 0 : _typeof(exports)) && "object" == ( false ? 0 : _typeof(module))) module.exports = t();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else { var o, n; }
}(window, function () {
  return function (e) {
    var t = {};
    function n(o) {
      if (t[o]) return t[o].exports;
      var r = t[o] = {
        i: o,
        l: !1,
        exports: {}
      };
      return e[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
    }
    return n.m = e, n.c = t, n.d = function (e, t, o) {
      n.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: o
      });
    }, n.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, n.t = function (e, t) {
      if (1 & t && (e = n(e)), 8 & t) return e;
      if (4 & t && "object" == _typeof(e) && e && e.__esModule) return e;
      var o = Object.create(null);
      if (n.r(o), Object.defineProperty(o, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e) for (var r in e) n.d(o, r, function (t) {
        return e[t];
      }.bind(null, r));
      return o;
    }, n.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e["default"];
      } : function () {
        return e;
      };
      return n.d(t, "a", t), t;
    }, n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, n.p = "", n(n.s = 0);
  }([function (e, t, n) {
    "use strict";

    n.r(t);
    var o,
      r = "fslightbox-",
      i = "".concat(r, "styles"),
      s = "".concat(r, "cursor-grabbing"),
      c = "".concat(r, "full-dimension"),
      a = "".concat(r, "flex-centered"),
      l = "".concat(r, "open"),
      u = "".concat(r, "transform-transition"),
      d = "".concat(r, "absoluted"),
      p = "".concat(r, "slide-btn"),
      f = "".concat(p, "-container"),
      h = "".concat(r, "fade-in"),
      m = "".concat(r, "fade-out"),
      g = h + "-strong",
      v = m + "-strong",
      b = "".concat(r, "opacity-"),
      x = "".concat(b, "1"),
      y = "".concat(r, "source");
    function S(e) {
      return (S = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
      })(e);
    }
    "object" === ("undefined" == typeof document ? "undefined" : S(document)) && ((o = document.createElement("style")).className = i, o.appendChild(document.createTextNode(".fslightbox-absoluted{position:absolute;top:0;left:0}.fslightbox-fade-in{animation:fslightbox-fade-in .3s cubic-bezier(0,0,.7,1)}.fslightbox-fade-out{animation:fslightbox-fade-out .3s ease}.fslightbox-fade-in-strong{animation:fslightbox-fade-in-strong .3s cubic-bezier(0,0,.7,1)}.fslightbox-fade-out-strong{animation:fslightbox-fade-out-strong .3s ease}@keyframes fslightbox-fade-in{from{opacity:.65}to{opacity:1}}@keyframes fslightbox-fade-out{from{opacity:.35}to{opacity:0}}@keyframes fslightbox-fade-in-strong{from{opacity:.3}to{opacity:1}}@keyframes fslightbox-fade-out-strong{from{opacity:1}to{opacity:0}}.fslightbox-cursor-grabbing{cursor:grabbing}.fslightbox-full-dimension{width:100%;height:100%}.fslightbox-open{overflow:hidden;height:100%}.fslightbox-flex-centered{display:flex;justify-content:center;align-items:center}.fslightbox-opacity-0{opacity:0!important}.fslightbox-opacity-1{opacity:1!important}.fslightbox-scrollbarfix{padding-right:17px}.fslightbox-transform-transition{transition:transform .3s}.fslightbox-container{font-family:Arial,sans-serif;position:fixed;top:0;left:0;background:linear-gradient(rgba(30,30,30,.9),#000 1810%);touch-action:pinch-zoom;z-index:1000000000;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.fslightbox-container *{box-sizing:border-box}.fslightbox-svg-path{transition:fill .15s ease;fill:#ddd}.fslightbox-nav{height:45px;width:100%;position:absolute;top:0;left:0}.fslightbox-slide-number-container{display:flex;justify-content:center;align-items:center;position:relative;height:100%;font-size:15px;color:#d7d7d7;z-index:0;max-width:55px;text-align:left}.fslightbox-slide-number-container .fslightbox-flex-centered{height:100%}.fslightbox-slash{display:block;margin:0 5px;width:1px;height:12px;transform:rotate(15deg);background:#fff}.fslightbox-toolbar{position:absolute;z-index:3;right:0;top:0;height:100%;display:flex;background:rgba(35,35,35,.65)}.fslightbox-toolbar-button{height:100%;width:45px;cursor:pointer}.fslightbox-toolbar-button:hover .fslightbox-svg-path{fill:#fff}.fslightbox-slide-btn-container{display:flex;align-items:center;padding:12px 12px 12px 6px;position:absolute;top:50%;cursor:pointer;z-index:3;transform:translateY(-50%)}@media (min-width:476px){.fslightbox-slide-btn-container{padding:22px 22px 22px 6px}}@media (min-width:768px){.fslightbox-slide-btn-container{padding:30px 30px 30px 6px}}.fslightbox-slide-btn-container:hover .fslightbox-svg-path{fill:#f1f1f1}.fslightbox-slide-btn{padding:9px;font-size:26px;background:rgba(35,35,35,.65)}@media (min-width:768px){.fslightbox-slide-btn{padding:10px}}@media (min-width:1600px){.fslightbox-slide-btn{padding:11px}}.fslightbox-slide-btn-container-previous{left:0}@media (max-width:475.99px){.fslightbox-slide-btn-container-previous{padding-left:3px}}.fslightbox-slide-btn-container-next{right:0;padding-left:12px;padding-right:3px}@media (min-width:476px){.fslightbox-slide-btn-container-next{padding-left:22px}}@media (min-width:768px){.fslightbox-slide-btn-container-next{padding-left:30px}}@media (min-width:476px){.fslightbox-slide-btn-container-next{padding-right:6px}}.fslightbox-down-event-detector{position:absolute;z-index:1}.fslightbox-slide-swiping-hoverer{z-index:4}.fslightbox-invalid-file-wrapper{font-size:22px;color:#eaebeb;margin:auto}.fslightbox-video{object-fit:cover}.fslightbox-youtube-iframe{border:0}.fslightbox-loader{display:block;margin:auto;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:67px;height:67px}.fslightbox-loader div{box-sizing:border-box;display:block;position:absolute;width:54px;height:54px;margin:6px;border:5px solid;border-color:#999 transparent transparent transparent;border-radius:50%;animation:fslightbox-loader 1.2s cubic-bezier(.5,0,.5,1) infinite}.fslightbox-loader div:nth-child(1){animation-delay:-.45s}.fslightbox-loader div:nth-child(2){animation-delay:-.3s}.fslightbox-loader div:nth-child(3){animation-delay:-.15s}@keyframes fslightbox-loader{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}.fslightbox-source{position:relative;z-index:2;opacity:0}")), document.head.appendChild(o));
    function w(e) {
      var t,
        n = e.props,
        o = 0,
        r = {};
      this.getSourceTypeFromLocalStorageByUrl = function (e) {
        return t[e] ? t[e] : i(e);
      }, this.handleReceivedSourceTypeForUrl = function (e, n) {
        !1 === r[n] && (o--, "invalid" !== e ? r[n] = e : delete r[n], 0 === o && (!function (e, t) {
          for (var n in t) e[n] = t[n];
        }(t, r), localStorage.setItem("fslightbox-types", JSON.stringify(t))));
      };
      var i = function i(e) {
        o++, r[e] = !1;
      };
      n.disableLocalStorage ? (this.getSourceTypeFromLocalStorageByUrl = function () {}, this.handleReceivedSourceTypeForUrl = function () {}) : (t = JSON.parse(localStorage.getItem("fslightbox-types"))) || (t = {}, this.getSourceTypeFromLocalStorageByUrl = i);
    }
    function L(e, t, n, o) {
      var r = e.data,
        i = e.elements.sources,
        s = n / o,
        c = 0;
      this.adjustSize = function () {
        if ((c = r.maxSourceWidth / s) < r.maxSourceHeight) return n < r.maxSourceWidth && (c = o), a();
        c = o > r.maxSourceHeight ? r.maxSourceHeight : o, a();
      };
      var a = function a() {
        i[t].style.width = c * s + "px", i[t].style.height = c + "px";
      };
    }
    function C(e, t) {
      var n = this,
        o = e.collections.sourceSizers,
        r = e.elements,
        i = r.sourceAnimationWrappers,
        s = r.sourceMainWrappers,
        c = r.sources,
        a = e.resolve;
      function l(e, n) {
        o[t] = a(L, [t, e, n]), o[t].adjustSize();
      }
      this.runActions = function (e, o) {
        c[t].classList.add(x), i[t].classList.add(g), s[t].removeChild(s[t].firstChild), l(e, o), n.runActions = l;
      };
    }
    function F(e, t) {
      var n,
        o = this,
        r = e.elements.sources,
        i = e.props,
        s = (0, e.resolve)(C, [t]);
      this.handleImageLoad = function (e) {
        var t = e.target,
          n = t.naturalWidth,
          o = t.naturalHeight;
        s.runActions(n, o);
      }, this.handleVideoLoad = function (e) {
        var t = e.target,
          o = t.videoWidth,
          r = t.videoHeight;
        n = !0, s.runActions(o, r);
      }, this.handleNotMetaDatedVideoLoad = function () {
        n || o.handleYoutubeLoad();
      }, this.handleYoutubeLoad = function () {
        var e = 1920,
          t = 1080;
        i.maxYoutubeDimensions && (e = i.maxYoutubeDimensions.width, t = i.maxYoutubeDimensions.height), s.runActions(e, t);
      }, this.handleCustomLoad = function () {
        setTimeout(function () {
          var e = r[t];
          s.runActions(e.offsetWidth, e.offsetHeight);
        });
      };
    }
    function A(e, t, n) {
      var o = e.elements.sources,
        r = e.props.customClasses,
        i = r[t] ? r[t] : "";
      o[t].className = n + " " + i;
    }
    function I(e, t) {
      var n = e.elements.sources,
        o = e.props.customAttributes;
      for (var r in o[t]) n[t].setAttribute(r, o[t][r]);
    }
    function T(e, t) {
      var n = e.collections.sourceLoadHandlers,
        o = e.elements,
        r = o.sources,
        i = o.sourceAnimationWrappers,
        s = e.props.sources;
      r[t] = document.createElement("img"), A(e, t, y), r[t].src = s[t], r[t].onload = n[t].handleImageLoad, I(e, t), i[t].appendChild(r[t]);
    }
    function E(e, t) {
      var n = e.collections.sourceLoadHandlers,
        o = e.elements,
        r = o.sources,
        i = o.sourceAnimationWrappers,
        s = e.props,
        c = s.sources,
        a = s.videosPosters;
      r[t] = document.createElement("video"), A(e, t, y), r[t].src = c[t], r[t].onloadedmetadata = function (e) {
        n[t].handleVideoLoad(e);
      }, r[t].controls = !0, I(e, t), a[t] && (r[t].poster = a[t]);
      var l = document.createElement("source");
      l.src = c[t], r[t].appendChild(l), setTimeout(n[t].handleNotMetaDatedVideoLoad, 3e3), i[t].appendChild(r[t]);
    }
    function N(e, t) {
      var n = e.collections.sourceLoadHandlers,
        o = e.elements,
        i = o.sources,
        s = o.sourceAnimationWrappers,
        c = e.props.sources;
      i[t] = document.createElement("iframe"), A(e, t, "".concat(y, " ").concat(r, "youtube-iframe")), i[t].src = "https://www.youtube.com/embed/".concat(c[t].match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/)[2], "?enablejsapi=1"), i[t].allowFullscreen = !0, I(e, t), s[t].appendChild(i[t]), n[t].handleYoutubeLoad();
    }
    function W(e, t) {
      var n = e.collections.sourceLoadHandlers,
        o = e.elements,
        r = o.sources,
        i = o.sourceAnimationWrappers,
        s = e.props.sources;
      r[t] = s[t], A(e, t, "".concat(r[t].className, " ").concat(y)), i[t].appendChild(r[t]), n[t].handleCustomLoad();
    }
    function z(e, t) {
      var n = e.elements,
        o = n.sources,
        i = n.sourceAnimationWrappers,
        s = n.sourceMainWrappers;
      e.props.sources;
      o[t] = document.createElement("div"), o[t].className = "".concat(r, "invalid-file-wrapper ").concat(a), o[t].innerHTML = "Invalid source", i[t].classList.add(g), i[t].appendChild(o[t]), s[t].removeChild(s[t].firstChild);
    }
    function M(e) {
      var t = e.collections,
        n = t.sourceLoadHandlers,
        o = t.sourcesRenderFunctions,
        r = e.core.sourceDisplayFacade,
        i = e.resolve;
      this.runActionsForSourceTypeAndIndex = function (t, s) {
        var c;
        switch ("invalid" !== t && (n[s] = i(F, [s])), t) {
          case "image":
            c = T;
            break;
          case "video":
            c = E;
            break;
          case "youtube":
            c = N;
            break;
          case "custom":
            c = W;
            break;
          default:
            c = z;
        }
        o[s] = function () {
          return c(e, s);
        }, r.displaySourcesWhichShouldBeDisplayed();
      };
    }
    function P() {
      var e,
        t,
        n,
        o = {
          isUrlYoutubeOne: function isUrlYoutubeOne(e) {
            var t = document.createElement("a");
            return t.href = e, "www.youtube.com" === t.hostname;
          },
          getTypeFromResponseContentType: function getTypeFromResponseContentType(e) {
            return e.slice(0, e.indexOf("/"));
          }
        };
      function r() {
        if (4 !== n.readyState) {
          if (2 === n.readyState) {
            var e;
            switch (o.getTypeFromResponseContentType(n.getResponseHeader("content-type"))) {
              case "image":
                e = "image";
                break;
              case "video":
                e = "video";
                break;
              default:
                e = "invalid";
            }
            n.onreadystatechange = null, n.abort(), t(e);
          }
        } else t("invalid");
      }
      this.setUrlToCheck = function (t) {
        e = t;
      }, this.getSourceType = function (i) {
        if (o.isUrlYoutubeOne(e)) return i("youtube");
        t = i, (n = new XMLHttpRequest()).onreadystatechange = r, n.open("GET", e, !0), n.send();
      };
    }
    function H(e, t, n) {
      var o = e.props,
        r = o.types,
        i = o.type,
        s = o.sources,
        c = e.resolve;
      this.getTypeSetByClientForIndex = function (e) {
        var t;
        return r && r[e] ? t = r[e] : i && (t = i), t;
      }, this.retrieveTypeWithXhrForIndex = function (e) {
        var o = c(P);
        o.setUrlToCheck(s[e]), o.getSourceType(function (o) {
          t.handleReceivedSourceTypeForUrl(o, s[e]), n.runActionsForSourceTypeAndIndex(o, e);
        });
      };
    }
    function k(e, t) {
      var n = e.componentsServices.hideSourceLoaderIfNotYetCollection,
        o = e.elements,
        r = o.sourceWrappersContainer,
        i = o.sourceMainWrappers;
      i[t] = document.createElement("div"), i[t].className = "".concat(d, " ").concat(c, " ").concat(a), i[t].innerHTML = '<div class="fslightbox-loader"><div></div><div></div><div></div><div></div></div>';
      var s = i[t].firstChild;
      n[t] = function () {
        i[t].contains(s) && i[t].removeChild(s);
      }, r.appendChild(i[t]), function (e, t) {
        var n = e.elements,
          o = n.sourceMainWrappers,
          r = n.sourceAnimationWrappers;
        r[t] = document.createElement("div"), o[t].appendChild(r[t]);
      }(e, t);
    }
    function O(e, t, n, o) {
      var i = document.createElementNS("http://www.w3.org/2000/svg", "svg");
      i.setAttributeNS(null, "width", t), i.setAttributeNS(null, "height", t), i.setAttributeNS(null, "viewBox", n);
      var s = document.createElementNS("http://www.w3.org/2000/svg", "path");
      return s.setAttributeNS(null, "class", "".concat(r, "svg-path")), s.setAttributeNS(null, "d", o), i.appendChild(s), e.appendChild(i), i;
    }
    function R(e, t) {
      var n = document.createElement("div");
      return n.className = "".concat(r, "toolbar-button ").concat(a), n.title = t, e.appendChild(n), n;
    }
    function D(e, t) {
      var n = document.createElement("div");
      n.className = "".concat(r, "toolbar"), t.appendChild(n), function (e, t) {
        var n = e.componentsServices,
          o = e.core.fullscreenToggler,
          r = e.data,
          i = "M4.5 11H3v4h4v-1.5H4.5V11zM3 7h1.5V4.5H7V3H3v4zm10.5 6.5H11V15h4v-4h-1.5v2.5zM11 3v1.5h2.5V7H15V3h-4z",
          s = R(t);
        s.title = "Enter fullscreen";
        var c = O(s, "20px", "0 0 18 18", i);
        n.enterFullscreen = function () {
          r.isFullscreenOpen = !0, s.title = "Exit fullscreen", c.setAttributeNS(null, "width", "24px"), c.setAttributeNS(null, "height", "24px"), c.setAttributeNS(null, "viewBox", "0 0 950 1024"), c.firstChild.setAttributeNS(null, "d", "M682 342h128v84h-212v-212h84v128zM598 810v-212h212v84h-128v128h-84zM342 342v-128h84v212h-212v-84h128zM214 682v-84h212v212h-84v-128h-128z");
        }, n.exitFullscreen = function () {
          r.isFullscreenOpen = !1, s.title = "Enter fullscreen", c.setAttributeNS(null, "width", "20px"), c.setAttributeNS(null, "height", "20px"), c.setAttributeNS(null, "viewBox", "0 0 18 18"), c.firstChild.setAttributeNS(null, "d", i);
        }, s.onclick = function () {
          r.isFullscreenOpen ? o.exitFullscreen() : o.enterFullscreen();
        };
      }(e, n), function (e, t) {
        var n = R(t, "Close");
        n.onclick = e.core.lightboxCloser.closeLightbox, O(n, "20px", "0 0 24 24", "M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z");
      }(e, n);
    }
    function j(e) {
      var t = e.props.sources,
        n = e.elements.container,
        o = document.createElement("div");
      o.className = "".concat(r, "nav"), n.appendChild(o), D(e, o), t.length > 1 && function (e, t) {
        var n = e.componentsServices,
          o = e.props.sources,
          i = (e.stageIndexes, document.createElement("div"));
        i.className = "".concat(r, "slide-number-container");
        var s = document.createElement("div");
        s.className = a;
        var c = document.createElement("span");
        n.setSlideNumber = function (e) {
          return c.innerHTML = e;
        };
        var l = document.createElement("span");
        l.className = "".concat(r, "slash");
        var u = document.createElement("div");
        u.innerHTML = o.length, i.appendChild(s), s.appendChild(c), s.appendChild(l), s.appendChild(u), t.appendChild(i), setTimeout(function () {
          s.offsetWidth > 55 && (i.style.justifyContent = "flex-start");
        });
      }(e, o);
    }
    function X(e, t) {
      var n = this,
        o = e.elements.sourceMainWrappers,
        r = e.props,
        i = 0;
      this.byValue = function (e) {
        return i = e, n;
      }, this.negative = function () {
        s(-c());
      }, this.zero = function () {
        s(0);
      }, this.positive = function () {
        s(c());
      };
      var s = function s(e) {
          o[t].style.transform = "translateX(".concat(e + i, "px)"), i = 0;
        },
        c = function c() {
          return (1 + r.slideDistance) * innerWidth;
        };
    }
    function B(e, t, n, o) {
      var r = e.elements.container,
        i = n.charAt(0).toUpperCase() + n.slice(1),
        s = document.createElement("div");
      s.className = "".concat(f, " ").concat(f, "-").concat(n), s.title = "".concat(i, " slide"), s.onclick = t, function (e, t) {
        var n = document.createElement("div");
        n.className = "".concat(p, " ").concat(a), O(n, "20px", "0 0 20 20", t), e.appendChild(n);
      }(s, o), r.appendChild(s);
    }
    function U(e, t) {
      var n = e.classList;
      n.contains(t) && n.remove(t);
    }
    function V(e) {
      var t = this,
        n = e.core,
        o = n.eventsDispatcher,
        r = n.fullscreenToggler,
        i = n.globalEventsController,
        s = n.scrollbarRecompensor,
        c = e.data,
        a = e.elements,
        u = e.props,
        d = e.sourcePointerProps;
      this.isLightboxFadingOut = !1, this.runActions = function () {
        t.isLightboxFadingOut = !0, a.container.classList.add(v), i.removeListeners(), u.exitFullscreenOnClose && c.isFullscreenOpen && r.exitFullscreen(), setTimeout(function () {
          t.isLightboxFadingOut = !1, d.isPointering = !1, a.container.classList.remove(v), document.documentElement.classList.remove(l), s.removeRecompense(), document.body.removeChild(a.container), o.dispatch("onClose");
        }, 270);
      };
    }
    function Y(e) {
      var t,
        n,
        o,
        r = e.collections.sourceMainWrappersTransformers,
        i = e.componentsServices,
        s = e.core,
        c = s.classFacade,
        a = s.slideIndexChanger,
        l = s.sourceDisplayFacade,
        d = s.stageManager,
        p = e.elements.sourceAnimationWrappers,
        f = e.stageIndexes,
        v = (t = function t() {
          c.removeFromEachElementClassIfContains("sourceAnimationWrappers", m);
        }, n = 300, o = [], function () {
          o.push(!0), setTimeout(function () {
            o.pop(), o.length || t();
          }, n);
        });
      a.changeTo = function (e) {
        f.current = e, d.updateStageIndexes(), i.setSlideNumber(e + 1), l.displaySourcesWhichShouldBeDisplayed();
      }, a.jumpTo = function (e) {
        var t = f.current;
        a.changeTo(e), c.removeFromEachElementClassIfContains("sourceMainWrappers", u), U(p[t], g), U(p[t], h), p[t].classList.add(m), U(p[e], g), U(p[e], m), p[e].classList.add(h), v(), r[e].zero(), setTimeout(function () {
          t !== f.current && r[t].negative();
        }, 270);
      };
    }
    function _(e) {
      var t = e.core,
        n = t.lightboxCloser,
        o = t.fullscreenToggler,
        r = t.slideChangeFacade;
      this.listener = function (e) {
        switch (e.key) {
          case "Escape":
            n.closeLightbox();
            break;
          case "ArrowLeft":
            r.changeToPrevious();
            break;
          case "ArrowRight":
            r.changeToNext();
            break;
          case "F11":
            e.preventDefault(), o.enterFullscreen();
        }
      };
    }
    function q(e) {
      var t = e.collections.sourceMainWrappersTransformers,
        n = e.elements,
        o = e.sourcePointerProps,
        r = e.stageIndexes;
      function i(e, n) {
        t[e].byValue(o.swipedX)[n]();
      }
      this.runActionsForEvent = function (e) {
        var t, c, a;
        n.container.contains(n.slideSwipingHoverer) || n.container.appendChild(n.slideSwipingHoverer), t = n.container, c = s, (a = t.classList).contains(c) || a.add(c), o.swipedX = e.screenX - o.downScreenX, i(r.current, "zero"), void 0 !== r.previous && o.swipedX > 0 ? i(r.previous, "negative") : void 0 !== r.next && o.swipedX < 0 && i(r.next, "positive");
      };
    }
    function J(e) {
      var t = e.props.sources,
        n = e.resolve,
        o = e.sourcePointerProps,
        r = n(q);
      1 === t.length ? this.listener = function () {
        o.swipedX = 1;
      } : this.listener = function (e) {
        o.isPointering && r.runActionsForEvent(e);
      };
    }
    function G(e) {
      var t = e.collections.sourceMainWrappersTransformers,
        n = e.core.slideIndexChanger,
        o = e.elements.sourceMainWrappers,
        r = e.stageIndexes;
      this.runPositiveSwipedXActions = function () {
        void 0 === r.previous || (i("positive"), n.changeTo(r.previous)), i("zero");
      }, this.runNegativeSwipedXActions = function () {
        void 0 === r.next || (i("negative"), n.changeTo(r.next)), i("zero");
      };
      var i = function i(e) {
        o[r.current].classList.add(u), t[r.current][e]();
      };
    }
    function $(e, t) {
      e.contains(t) && e.removeChild(t);
    }
    function K(e) {
      var t = e.core.lightboxCloser,
        n = e.elements,
        o = e.resolve,
        r = e.sourcePointerProps,
        i = o(G);
      this.runNoSwipeActions = function () {
        $(n.container, n.slideSwipingHoverer), r.isSourceDownEventTarget || t.closeLightbox(), r.isPointering = !1;
      }, this.runActions = function () {
        r.swipedX > 0 ? i.runPositiveSwipedXActions() : i.runNegativeSwipedXActions(), $(n.container, n.slideSwipingHoverer), n.container.classList.remove(s), r.isPointering = !1;
      };
    }
    function Q(e) {
      var t = e.resolve,
        n = e.sourcePointerProps,
        o = t(K);
      this.listener = function () {
        n.isPointering && (n.swipedX ? o.runActions() : o.runNoSwipeActions());
      };
    }
    function Z(e) {
      var t, n, o;
      n = (t = e).core.classFacade, o = t.elements, n.removeFromEachElementClassIfContains = function (e, t) {
        for (var n = 0; n < o[e].length; n++) U(o[e][n], t);
      }, function (e) {
        var t = e.core.eventsDispatcher,
          n = e.props;
        t.dispatch = function (e) {
          n[e] && n[e]();
        };
      }(e), function (e) {
        var t = e.componentsServices,
          n = e.core.fullscreenToggler;
        n.enterFullscreen = function () {
          t.enterFullscreen();
          var e = document.documentElement;
          e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen();
        }, n.exitFullscreen = function () {
          t.exitFullscreen(), document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
        };
      }(e), function (e) {
        var t = e.core,
          n = t.globalEventsController,
          o = t.windowResizeActioner,
          r = e.resolve,
          i = r(_),
          s = r(J),
          c = r(Q);
        n.attachListeners = function () {
          document.addEventListener("pointermove", s.listener), document.addEventListener("pointerup", c.listener), addEventListener("resize", o.runActions), document.addEventListener("keydown", i.listener);
        }, n.removeListeners = function () {
          document.removeEventListener("pointermove", s.listener), document.removeEventListener("pointerup", c.listener), removeEventListener("resize", o.runActions), document.removeEventListener("keydown", i.listener);
        };
      }(e), function (e) {
        var t = e.core.lightboxCloser,
          n = (0, e.resolve)(V);
        t.closeLightbox = function () {
          n.isLightboxFadingOut || n.runActions();
        };
      }(e), ne(e), function (e) {
        var t = e.data,
          n = e.core.scrollbarRecompensor;
        function o() {
          document.body.offsetHeight > innerHeight && (document.body.style.marginRight = t.scrollbarWidth + "px");
        }
        n.addRecompense = function () {
          "complete" === document.readyState ? o() : addEventListener("load", function () {
            o(), n.addRecompense = o;
          });
        }, n.removeRecompense = function () {
          document.body.style.removeProperty("margin-right");
        };
      }(e), function (e) {
        var t = e.core,
          n = t.slideChangeFacade,
          o = t.slideIndexChanger,
          r = t.stageManager;
        e.props.sources.length > 1 ? (n.changeToPrevious = function () {
          o.jumpTo(r.getPreviousSlideIndex());
        }, n.changeToNext = function () {
          o.jumpTo(r.getNextSlideIndex());
        }) : (n.changeToPrevious = function () {}, n.changeToNext = function () {});
      }(e), Y(e), function (e) {
        var t = e.core,
          n = t.classFacade,
          o = t.sourcesPointerDown,
          r = e.elements.sources,
          i = e.sourcePointerProps,
          s = e.stageIndexes;
        o.listener = function (e) {
          "VIDEO" !== e.target.tagName && e.preventDefault(), i.isPointering = !0, i.downScreenX = e.screenX, i.swipedX = 0;
          var t = r[s.current];
          t && t.contains(e.target) ? i.isSourceDownEventTarget = !0 : i.isSourceDownEventTarget = !1, n.removeFromEachElementClassIfContains("sourceMainWrappers", u);
        };
      }(e), function (e) {
        var t = e.collections.sourcesRenderFunctions,
          n = e.core.sourceDisplayFacade,
          o = e.props,
          r = e.stageIndexes;
        function i(e) {
          t[e] && (t[e](), delete t[e]);
        }
        n.displaySourcesWhichShouldBeDisplayed = function () {
          if (o.loadOnlyCurrentSource) i(r.current);else for (var e in r) i(r[e]);
        };
      }(e), function (e) {
        var t = e.stageIndexes,
          n = e.core.stageManager,
          o = e.props.sources.length - 1;
        n.getPreviousSlideIndex = function () {
          return 0 === t.current ? o : t.current - 1;
        }, n.getNextSlideIndex = function () {
          return t.current === o ? 0 : t.current + 1;
        }, n.updateStageIndexes = 0 === o ? function () {} : 1 === o ? function () {
          0 === t.current ? (t.next = 1, delete t.previous) : (t.previous = 0, delete t.next);
        } : function () {
          t.previous = n.getPreviousSlideIndex(), t.next = n.getNextSlideIndex();
        }, n.isSourceInStage = o <= 2 ? function () {
          return !0;
        } : function (e) {
          var n = t.current;
          if (0 === n && e === o || n === o && 0 === e) return !0;
          var r = n - e;
          return -1 === r || 0 === r || 1 === r;
        };
      }(e), function (e) {
        var t = e.collections,
          n = t.sourceMainWrappersTransformers,
          o = t.sourceSizers,
          r = e.core.windowResizeActioner,
          i = e.data,
          s = e.elements.sourceMainWrappers,
          c = e.props,
          a = e.stageIndexes;
        r.runActions = function () {
          innerWidth < 992 ? i.maxSourceWidth = innerWidth : i.maxSourceWidth = .9 * innerWidth, i.maxSourceHeight = .9 * innerHeight;
          for (var e = 0; e < c.sources.length; e++) U(s[e], u), e !== a.current && n[e].negative(), o[e] && o[e].adjustSize();
        };
      }(e);
    }
    function ee(e) {
      var t = e.props.disableLocalStorage;
      if (!t) {
        var n = localStorage.getItem("fslightbox-scrollbar-width");
        if (n) return n;
      }
      var o = function () {
          var e = document.createElement("div"),
            t = e.style;
          return t.visibility = "hidden", t.width = "100px", t.msOverflowStyle = "scrollbar", t.overflow = "scroll", e;
        }(),
        r = function () {
          var e = document.createElement("div");
          return e.style.width = "100%", e;
        }();
      document.body.appendChild(o);
      var i = o.offsetWidth;
      o.appendChild(r);
      var s = r.offsetWidth;
      document.body.removeChild(o);
      var c = i - s;
      return t || localStorage.setItem("fslightbox-scrollbar-width", c.toString()), c;
    }
    function te(e) {
      var t = e.core.eventsDispatcher,
        n = e.data,
        o = e.elements,
        i = e.props.sources;
      n.isInitialized = !0, n.scrollbarWidth = ee(e), function (e) {
        for (var t = e.collections.sourceMainWrappersTransformers, n = e.props.sources, o = e.resolve, r = 0; r < n.length; r++) t[r] = o(X, [r]);
      }(e), Z(e), o.container = document.createElement("div"), o.container.className = "".concat(r, "container ").concat(c, " ").concat(g), function (e) {
        var t = e.elements;
        t.slideSwipingHoverer = document.createElement("div"), t.slideSwipingHoverer.className = "".concat(r, "slide-swiping-hoverer ").concat(c, " ").concat(d);
      }(e), j(e), function (e) {
        var t = e.core.sourcesPointerDown,
          n = e.elements,
          o = e.props.sources,
          r = document.createElement("div");
        r.className = "".concat(d, " ").concat(c), n.container.appendChild(r), r.addEventListener("pointerdown", t.listener), n.sourceWrappersContainer = r;
        for (var i = 0; i < o.length; i++) k(e, i);
      }(e), i.length > 1 && function (e) {
        var t = e.core.slideChangeFacade;
        B(e, t.changeToPrevious, "previous", "M18.271,9.212H3.615l4.184-4.184c0.306-0.306,0.306-0.801,0-1.107c-0.306-0.306-0.801-0.306-1.107,0L1.21,9.403C1.194,9.417,1.174,9.421,1.158,9.437c-0.181,0.181-0.242,0.425-0.209,0.66c0.005,0.038,0.012,0.071,0.022,0.109c0.028,0.098,0.075,0.188,0.142,0.271c0.021,0.026,0.021,0.061,0.045,0.085c0.015,0.016,0.034,0.02,0.05,0.033l5.484,5.483c0.306,0.307,0.801,0.307,1.107,0c0.306-0.305,0.306-0.801,0-1.105l-4.184-4.185h14.656c0.436,0,0.788-0.353,0.788-0.788S18.707,9.212,18.271,9.212z"), B(e, t.changeToNext, "next", "M1.729,9.212h14.656l-4.184-4.184c-0.307-0.306-0.307-0.801,0-1.107c0.305-0.306,0.801-0.306,1.106,0l5.481,5.482c0.018,0.014,0.037,0.019,0.053,0.034c0.181,0.181,0.242,0.425,0.209,0.66c-0.004,0.038-0.012,0.071-0.021,0.109c-0.028,0.098-0.075,0.188-0.143,0.271c-0.021,0.026-0.021,0.061-0.045,0.085c-0.015,0.016-0.034,0.02-0.051,0.033l-5.483,5.483c-0.306,0.307-0.802,0.307-1.106,0c-0.307-0.305-0.307-0.801,0-1.105l4.184-4.185H1.729c-0.436,0-0.788-0.353-0.788-0.788S1.293,9.212,1.729,9.212z");
      }(e), function (e) {
        for (var t = e.props.sources, n = e.resolve, o = n(w), r = n(M), i = n(H, [o, r]), s = 0; s < t.length; s++) if ("string" == typeof t[s]) {
          var c = i.getTypeSetByClientForIndex(s);
          if (c) r.runActionsForSourceTypeAndIndex(c, s);else {
            var a = o.getSourceTypeFromLocalStorageByUrl(t[s]);
            a ? r.runActionsForSourceTypeAndIndex(a, s) : i.retrieveTypeWithXhrForIndex(s);
          }
        } else r.runActionsForSourceTypeAndIndex("custom", s);
      }(e), t.dispatch("onInit");
    }
    function ne(e) {
      var t = e.collections.sourceMainWrappersTransformers,
        n = e.componentsServices,
        o = e.core,
        r = o.eventsDispatcher,
        i = o.lightboxOpener,
        s = o.globalEventsController,
        c = o.scrollbarRecompensor,
        a = o.sourceDisplayFacade,
        u = o.stageManager,
        d = o.windowResizeActioner,
        p = e.data,
        f = e.elements,
        h = e.stageIndexes;
      i.open = function () {
        var o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        h.current = o, p.isInitialized ? r.dispatch("onShow") : te(e), u.updateStageIndexes(), a.displaySourcesWhichShouldBeDisplayed(), n.setSlideNumber(o + 1), document.body.appendChild(f.container), document.documentElement.classList.add(l), c.addRecompense(), s.attachListeners(), d.runActions(), t[h.current].zero(), r.dispatch("onOpen");
      };
    }
    function oe(e, t, n) {
      return (oe = re() ? Reflect.construct : function (e, t, n) {
        var o = [null];
        o.push.apply(o, t);
        var r = new (Function.bind.apply(e, o))();
        return n && ie(r, n.prototype), r;
      }).apply(null, arguments);
    }
    function re() {
      if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
      } catch (e) {
        return !1;
      }
    }
    function ie(e, t) {
      return (ie = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }
    function se(e) {
      return function (e) {
        if (Array.isArray(e)) return ce(e);
      }(e) || function (e) {
        if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
      }(e) || function (e, t) {
        if (!e) return;
        if ("string" == typeof e) return ce(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        "Object" === n && e.constructor && (n = e.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(e);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ce(e, t);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function ce(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var n = 0, o = new Array(t); n < t; n++) o[n] = e[n];
      return o;
    }
    function ae() {
      for (var e = document.getElementsByTagName("a"), t = function t(_t) {
          if (!e[_t].hasAttribute("data-fslightbox")) return "continue";
          var n = e[_t].getAttribute("data-fslightbox"),
            o = e[_t].getAttribute("href");
          fsLightboxInstances[n] || (fsLightboxInstances[n] = new FsLightbox());
          var r = null;
          "#" === o.charAt(0) ? (r = document.getElementById(o.substring(1)).cloneNode(!0)).removeAttribute("id") : r = o, fsLightboxInstances[n].props.sources.push(r), fsLightboxInstances[n].elements.a.push(e[_t]);
          var i = fsLightboxInstances[n].props.sources.length - 1;
          e[_t].onclick = function (e) {
            e.preventDefault(), fsLightboxInstances[n].open(i);
          }, d("types", "data-type"), d("videosPosters", "data-video-poster"), d("customClasses", "data-class"), d("customClasses", "data-custom-class");
          for (var s = ["href", "data-fslightbox", "data-type", "data-video-poster", "data-class", "data-custom-class"], c = e[_t].attributes, a = fsLightboxInstances[n].props.customAttributes, l = 0; l < c.length; l++) if (-1 === s.indexOf(c[l].name) && "data-" === c[l].name.substr(0, 5)) {
            a[i] || (a[i] = {});
            var u = c[l].name.substr(5);
            a[i][u] = c[l].value;
          }
          function d(o, r) {
            e[_t].hasAttribute(r) && (fsLightboxInstances[n].props[o][i] = e[_t].getAttribute(r));
          }
        }, n = 0; n < e.length; n++) t(n);
      var o = Object.keys(fsLightboxInstances);
      window.fsLightbox = fsLightboxInstances[o[o.length - 1]];
    }
    window.FsLightbox = function () {
      var e = this;
      this.props = {
        sources: [],
        customAttributes: [],
        customClasses: [],
        types: [],
        videosPosters: [],
        slideDistance: .3
      }, this.data = {
        isInitialized: !1,
        isFullscreenOpen: !1,
        maxSourceWidth: 0,
        maxSourceHeight: 0,
        scrollbarWidth: 0
      }, this.sourcePointerProps = {
        downScreenX: null,
        isPointering: !1,
        isSourceDownEventTarget: !1,
        swipedX: 0
      }, this.stageIndexes = {}, this.elements = {
        a: [],
        container: null,
        slideSwipingHoverer: null,
        sourceWrappersContainer: null,
        sources: [],
        sourceMainWrappers: [],
        sourceAnimationWrappers: []
      }, this.componentsServices = {
        enterFullscreen: null,
        exitFullscreen: null,
        hideSourceLoaderIfNotYetCollection: [],
        setSlideNumber: function setSlideNumber() {}
      }, this.resolve = function (t) {
        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
        return n.unshift(e), oe(t, se(n));
      }, this.collections = {
        sourceMainWrappersTransformers: [],
        sourceLoadHandlers: [],
        sourcesRenderFunctions: [],
        sourceSizers: []
      }, this.core = {
        classFacade: {},
        eventsDispatcher: {},
        fullscreenToggler: {},
        globalEventsController: {},
        lightboxCloser: {},
        lightboxOpener: {},
        lightboxUpdater: {},
        scrollbarRecompensor: {},
        slideChangeFacade: {},
        slideIndexChanger: {},
        sourcesPointerDown: {},
        sourceDisplayFacade: {},
        stageManager: {},
        windowResizeActioner: {}
      }, ne(this), this.open = function (t) {
        return e.core.lightboxOpener.open(t);
      }, this.close = function () {
        return e.core.lightboxCloser.closeLightbox();
      };
    }, window.fsLightboxInstances = {}, ae(), window.refreshFsLightbox = function () {
      for (var e in fsLightboxInstances) {
        var t = fsLightboxInstances[e].props;
        fsLightboxInstances[e] = new FsLightbox(), fsLightboxInstances[e].props = t, fsLightboxInstances[e].props.sources = [], fsLightboxInstances[e].elements.a = [];
      }
      ae();
    };
  }]);
});

/***/ }),

/***/ "./assets/vendor/hs-go-to/dist/hs-go-to.min.js":
/*!*****************************************************!*\
  !*** ./assets/vendor/hs-go-to/dist/hs-go-to.min.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! core-js/modules/es.symbol.to-string-tag.js */ "./node_modules/core-js/modules/es.symbol.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.json.to-string-tag.js */ "./node_modules/core-js/modules/es.json.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.math.to-string-tag.js */ "./node_modules/core-js/modules/es.math.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.object.create.js */ "./node_modules/core-js/modules/es.object.create.js");
__webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (n, e) {
  "object" == ( false ? 0 : _typeof(exports)) && "object" == ( false ? 0 : _typeof(module)) ? module.exports = e() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
}(window, function () {
  return d = {
    "./src/js/hs-go-to.js": function srcJsHsGoToJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSGoTo; });\n/* harmony import */ var _utils_scrollTo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/scrollTo */ "./src/utils/scrollTo.js");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar dataAttributeName = \'data-hs-go-to-options\';\nvar defaults = {\n  pageContainerSelector: \'html, body\',\n  targetSelector: null,\n  compensationSelector: null,\n  animationInit: \'animated\',\n  animationIn: \'fadeInUp\',\n  animationOut: \'fadeOutDown\',\n  duration: 800,\n  offsetTop: 0,\n  position: {\n    init: null,\n    hide: null,\n    show: null\n  },\n  isReferencedToOtherPage: null,\n  preventEventClass: \'hs-go-to-prevent-event\'\n};\n\nvar HSGoTo = /*#__PURE__*/function () {\n  function HSGoTo(el, options, id) {\n    _classCallCheck(this, HSGoTo);\n\n    this.collection = [];\n    var that = this;\n    var elems;\n\n    if (el instanceof HTMLElement) {\n      elems = [el];\n    } else if (el instanceof Object) {\n      elems = el;\n    } else {\n      elems = document.querySelectorAll(el);\n    }\n\n    for (var i = 0; i < elems.length; i += 1) {\n      that.addToCollection(elems[i], options, id || elems[i].id);\n    }\n\n    if (!that.collection.length) {\n      return false;\n    } // initialization calls\n\n\n    that._init();\n\n    return this;\n  }\n\n  _createClass(HSGoTo, [{\n    key: "_init",\n    value: function _init() {\n      var _this = this;\n\n      var that = this;\n\n      var _loop = function _loop(i) {\n        var _$el = void 0;\n\n        var _options = void 0;\n\n        if (that.collection[i].hasOwnProperty(\'$initializedEl\')) {\n          return "continue";\n        }\n\n        _$el = that.collection[i].$el;\n        _options = that.collection[i].options;\n\n        var _compensationSelector = document.querySelector(_options.compensationSelector),\n            _targetSelector = document.querySelector(_options.targetSelector),\n            _pageContainerSelector = document.querySelector(_options.pageContainerSelector);\n\n        _options.targetOffsetTop = function () {\n          if (_compensationSelector) {\n            return _targetSelector ? _targetSelector.offsetTop - _compensationSelector.innerHeight : 0;\n          } else {\n            return _targetSelector ? _targetSelector.offsetTop : 0;\n          }\n        };\n\n        _this.prepareObject(_$el, _options); // Set Position\n\n\n        if (_options.position) {\n          _this.setPosition(_$el, _options);\n        } // Click Events\n\n\n        _$el.addEventListener(\'click\', function (e) {\n          return _this.clickEvents(_$el, _options, {\n            _pageContainerSelector: _pageContainerSelector,\n            _compensationSelector: _compensationSelector,\n            _targetSelector: _targetSelector\n          });\n        }); // Scroll Events\n\n\n        if (_options.animationIn && _options.animationOut) {\n          document.addEventListener(\'scroll\', function (e) {\n            return _this.scrollEvents(_$el, _options);\n          });\n        }\n      };\n\n      for (var i = 0; i < that.collection.length; i += 1) {\n        var _ret = _loop(i);\n\n        if (_ret === "continue") continue;\n      }\n    }\n  }, {\n    key: "prepareObject",\n    value: function prepareObject($el, settings) {\n      if (settings.animationIn && settings.animationOut) {\n        if (navigator.userAgent.match(\'MSIE 10.0\')) {\n          document.html.classList.add(\'ie10\');\n        }\n\n        $el.classList.add(settings.animationInit, settings.animationOut, settings.preventEventClass);\n      }\n    }\n  }, {\n    key: "setPosition",\n    value: function setPosition($el, settings) {\n      for (var style in settings.position.init) {\n        $el.style.setProperty(style, settings.position.init[style]);\n      }\n    }\n  }, {\n    key: "clickEvents",\n    value: function clickEvents($el, settings, _ref) {\n      var _pageContainerSelector = _ref._pageContainerSelector;\n\n      if (!settings.isReferencedToOtherPage) {\n        if (event) {\n          event.preventDefault();\n        }\n\n        Object(_utils_scrollTo__WEBPACK_IMPORTED_MODULE_0__["default"])({\n          to: settings.targetOffsetTop(),\n          el: _pageContainerSelector\n        }, settings.duration);\n      }\n    }\n  }, {\n    key: "scrollEvents",\n    value: function scrollEvents($el, settings) {\n      $el.style.visibility = \'\';\n\n      if (window.scrollY >= settings.offsetTop) {\n        if (settings.position.show) {\n          for (var style in settings.position.show) {\n            $el.style.setProperty(style, settings.position.show[style]);\n          }\n        }\n\n        $el.classList.remove(settings.animationOut);\n        $el.classList.add(settings.animationIn);\n      } else {\n        if (settings.position.show) {\n          for (var _style in settings.position.show) {\n            $el.style.setProperty(_style, settings.position.show[_style]);\n          }\n        }\n\n        $el.classList.remove(settings.animationIn);\n        $el.classList.add(settings.animationOut);\n      }\n    }\n  }, {\n    key: "addToCollection",\n    value: function addToCollection(item, options, id) {\n      this.collection.push({\n        $el: item,\n        id: id || null,\n        options: Object.assign({}, defaults, item.hasAttribute(dataAttributeName) ? JSON.parse(item.getAttribute(dataAttributeName)) : {}, options)\n      });\n    }\n  }, {\n    key: "getItem",\n    value: function getItem(item) {\n      if (typeof item === \'number\') {\n        return this.collection[item].$initializedEl;\n      } else {\n        return this.collection.find(function (el) {\n          return el.id === item;\n        }).$initializedEl;\n      }\n    }\n  }]);\n\n  return HSGoTo;\n}();\n\n\n\n//# sourceURL=webpack://HSGoTo/./src/js/hs-go-to.js?');
    },
    "./src/utils/scrollTo.js": function srcUtilsScrollToJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return scrollTo; });\nMath.easeInOutQuad = function (t, b, c, d) {\n  t /= d / 2;\n  if (t < 1) return c / 2 * t * t + b;\n  t--;\n  return -c / 2 * (t * (t - 2) - 1) + b;\n};\n/*\n  scrollTo(element.scrollTop || 200, 400)\n*/\n\n\nfunction scrollTo(_ref, duration) {\n  var el = _ref.el,\n      to = _ref.to;\n  var element = el;\n  var start = element && element.scrollTop || window.pageYOffset,\n      change = to - start,\n      increment = 20;\n  var currentTime = 0;\n\n  var animateScroll = function animateScroll() {\n    currentTime += increment;\n    var val = Math.easeInOutQuad(currentTime, start, change, duration);\n    el.scrollTop = val;\n\n    if (currentTime < duration) {\n      window.setTimeout(animateScroll, increment);\n    }\n  };\n\n  animateScroll();\n}\n\n//# sourceURL=webpack://HSGoTo/./src/utils/scrollTo.js?');
    }
  }, e = {}, f.m = d, f.c = e, f.d = function (n, e, t) {
    f.o(n, e) || Object.defineProperty(n, e, {
      enumerable: !0,
      get: t
    });
  }, f.r = function (n) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(n, Symbol.toStringTag, {
      value: "Module"
    }), Object.defineProperty(n, "__esModule", {
      value: !0
    });
  }, f.t = function (e, n) {
    if (1 & n && (e = f(e)), 8 & n) return e;
    if (4 & n && "object" == _typeof(e) && e && e.__esModule) return e;
    var t = Object.create(null);
    if (f.r(t), Object.defineProperty(t, "default", {
      enumerable: !0,
      value: e
    }), 2 & n && "string" != typeof e) for (var o in e) f.d(t, o, function (n) {
      return e[n];
    }.bind(null, o));
    return t;
  }, f.n = function (n) {
    var e = n && n.__esModule ? function () {
      return n["default"];
    } : function () {
      return n;
    };
    return f.d(e, "a", e), e;
  }, f.o = function (n, e) {
    return Object.prototype.hasOwnProperty.call(n, e);
  }, f.p = "", f(f.s = "./src/js/hs-go-to.js")["default"];
  function f(n) {
    if (e[n]) return e[n].exports;
    var t = e[n] = {
      i: n,
      l: !1,
      exports: {}
    };
    return d[n].call(t.exports, t, t.exports, f), t.l = !0, t.exports;
  }
  var d, e;
});

/***/ }),

/***/ "./assets/vendor/hs-header/dist/hs-header.min.js":
/*!*******************************************************!*\
  !*** ./assets/vendor/hs-header/dist/hs-header.min.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! core-js/modules/es.symbol.to-string-tag.js */ "./node_modules/core-js/modules/es.symbol.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.json.to-string-tag.js */ "./node_modules/core-js/modules/es.json.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.math.to-string-tag.js */ "./node_modules/core-js/modules/es.math.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.object.create.js */ "./node_modules/core-js/modules/es.object.create.js");
__webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (e, t) {
  "object" == ( false ? 0 : _typeof(exports)) && "object" == ( false ? 0 : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
}(window, function () {
  return d = {
    "./src/js/hs-header.js": function srcJsHsHeaderJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return HSHeader; });\n/* harmony import */ var _observers_sticky__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observers/sticky */ \"./src/js/observers/sticky.js\");\n/* harmony import */ var _observers_moment_show_hide__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observers/moment-show-hide */ \"./src/js/observers/moment-show-hide.js\");\n/* harmony import */ var _observers_show_hide__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observers/show-hide */ \"./src/js/observers/show-hide.js\");\n/* harmony import */ var _observers_hide_section__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observers/hide-section */ \"./src/js/observers/hide-section.js\");\n/* harmony import */ var _observers_has_hidden_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./observers/has-hidden-element */ \"./src/js/observers/has-hidden-element.js\");\n/* harmony import */ var _observers_floating__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./observers/floating */ \"./src/js/observers/floating.js\");\n/* harmony import */ var _observers_without_behavior__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./observers/without-behavior */ \"./src/js/observers/without-behavior.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n* HSHeader Plugin\n* @version: 3.0.0 (Mon, 25 Mar 2021)\n* @author: HtmlStream\n* @event-namespace: .HSHeader\n* @license: Htmlstream Libraries (https://htmlstream.com/)\n* Copyright 2019 Htmlstream\n*/\n// Sticky\n // Moment Show / Hide\n\n // Show / Hide\n\n // Hide Section\n\n // Has Hidden Element\n\n // Floating\n\n // Without Behavior\n\n\n\nvar HSHeader = /*#__PURE__*/function () {\n  function HSHeader(el, config, observers) {\n    _classCallCheck(this, HSHeader);\n\n    this.element = typeof el === \"string\" ? document.querySelector(el) : el;\n    this.config = config;\n    this.observers = observers && Object.prototype.toString.call(observers) === '[object Object]' ? observers : {};\n    this.viewport = 'xs';\n    this.defaults = {\n      fixMoment: 0,\n      fixMomentClasses: null,\n      fixMomentExclude: null,\n      fixEffect: 'slide',\n      breakpoint: 'lg',\n      breakpointsMap: {\n        'md': 768,\n        'sm': 576,\n        'lg': 992,\n        'xl': 1200\n      },\n      effectCompensation: false,\n      effectCompensationStartClass: false,\n      effectCompensationEndClass: false\n    };\n  }\n\n  _createClass(HSHeader, [{\n    key: \"init\",\n    value: function init() {\n      var self = this,\n          element = this.element;\n      var dataSettings = element.hasAttribute('data-hs-header-options') ? JSON.parse(element.getAttribute('data-hs-header-options')) : {};\n      if (!element || element.hasAttribute('HSHeader')) return;\n      this.config = Object.assign({}, this.defaults, dataSettings, this.config);\n\n      this._detectObservers();\n\n      this.fixMediaDifference(this.element);\n      this.checkViewport();\n      onScroll();\n      document.addEventListener('scroll', onScroll);\n      onResize();\n      window.addEventListener('resize', onResize);\n\n      function onScroll() {\n        window.HSHeader = null;\n\n        if (window.pageYOffset < self.config.fixMoment - 100 && self.config.effectCompensation === true) {\n          element.style.top = -window.pageYOffset;\n          element.classList.add(self.config.effectCompensationStartClass);\n          element.classList.remove(self.config.effectCompensationEndClass);\n        } else if (self.config.effectCompensation === true) {\n          element.style.top = 0;\n          element.classList.add(self.config.effectCompensationEndClass);\n          element.classList.remove(self.config.effectCompensationStartClass);\n        }\n\n        if (element.hasAttribute('HSHeader')) {\n          self.notify();\n        }\n\n        element.setAttribute('HSHeader', true);\n      }\n\n      function onResize() {\n        if (self.resizeTimeOutId) clearTimeout(self.resizeTimeOutId);\n        self.resizeTimeOutId = setTimeout(function () {\n          // self.checkViewport()\n          self.update();\n        }, 100);\n      }\n\n      return this.element;\n    }\n  }, {\n    key: \"header\",\n    value: function header(element, config, observers) {\n      if (!element || !element.length) return;\n      this.element = element;\n      this.config = config;\n      this.observers = observers && $.isPlainObject(observers) ? observers : {};\n      this.viewport = 'xs';\n      this.checkViewport();\n    }\n  }, {\n    key: \"_detectObservers\",\n    value: function _detectObservers() {\n      if (!this.element) return;\n      var observers = this.observers = {\n        'xs': [],\n        'sm': [],\n        'md': [],\n        'lg': [],\n        'xl': []\n      };\n      /* ------------------------ xs -------------------------*/\n      // Has Hidden Element\n\n      if (this.element.classList.contains('navbar-has-hidden-element')) {\n        observers['xs'].push(new _observers_has_hidden_element__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.element).init());\n      } // Sticky top\n\n\n      if (this.element.classList.contains('navbar-sticky-top')) {\n        if (this.element.classList.contains('navbar-show-hide')) {\n          observers['xs'].push(new _observers_moment_show_hide__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.element).init());\n        } else if (this.element.classList.contains('navbar-toggle')) {\n          observers['xs'].push(new _observers_hide_section__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.element).init());\n        }\n\n        observers['xs'].push(new _observers_sticky__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.element).init());\n      } // Floating\n\n\n      if (this.element.classList.contains('navbar-floating')) {\n        observers['xs'].push(new _observers_floating__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.element).init());\n      }\n\n      if (this.element.classList.contains('navbar-invulnerable')) {\n        observers['xs'].push(new _observers_without_behavior__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this.element).init());\n      } // Abs top & Static\n\n\n      if (this.element.classList.contains('navbar-absolute-top') || this.element.classList.contains('navbar-static')) {\n        if (this.element.classList.contains('navbar-show-hide')) {\n          observers['xs'].push(new _observers_show_hide__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.element, this.config).init());\n        }\n      }\n\n      return observers;\n    }\n  }, {\n    key: \"fixMediaDifference\",\n    value: function fixMediaDifference(element) {\n      if (!element || !element.length || !element.filter(function (el) {\n        return el.closest('[class*=\"navbar-side\"]');\n      }).length) return;\n      var toggleable;\n\n      if (element.classList.contains('navbar-side-left-xl') || element.classList.contains('navbar-side-right-xl')) {\n        toggleable = element.querySelector('.navbar-expand-xl');\n\n        if (toggleable) {\n          toggleable.classList.remove('navbar-expand-xl');\n          toggleable.classList.add('navbar-expand-lg');\n        }\n      } else if (element.classList.contains('navbar-side-left-lg') || element.classList.contains('navbar-side-right-lg')) {\n        toggleable = element.querySelector('.navbar-expand-lg');\n\n        if (toggleable) {\n          toggleable.classList.remove('navbar-expand-lg');\n          toggleable.classList.add('navbar-expand-md');\n        }\n      } else if (element.classList.contains('navbar-side-left-md') || element.classList.contains('navbar-side-right-md')) {\n        toggleable = element.querySelector('.navbar-expand-md');\n\n        if (toggleable) {\n          toggleable.classList.remove('navbar-expand-md');\n          toggleable.classList.add('navbar-expand-sm');\n        }\n      } else if (element.classList.contains('navbar-side-left-sm') || element.classList.contains('navbar-side-right-sm')) {\n        toggleable = element.querySelector('.navbar-expand-sm');\n\n        if (toggleable) {\n          toggleable.classList.remove('navbar-expand-sm');\n          toggleable.classList.add('navbar-expand');\n        }\n      }\n    }\n  }, {\n    key: \"checkViewport\",\n    value: function checkViewport() {\n      if (window.innerWidth > this.config.breakpointsMap['sm'] && this.observers['sm'].length) {\n        this.prevViewport = this.viewport;\n        this.viewport = 'sm';\n\n        if (this.config.fixMoment && window.pageYOffset > this.config.fixMoment) {\n          if (typeof this.config.breakpointsMap['sm'] === 'undefined') {\n            this.element.classList.remove('navbar-scrolled');\n          } else {\n            this.element.classList.add('navbar-scrolled');\n          }\n        }\n\n        return this;\n      }\n\n      if (window.innerWidth > this.config.breakpointsMap['md'] && this.observers['md'].length) {\n        this.prevViewport = this.viewport;\n        this.viewport = 'md';\n\n        if (this.config.fixMoment && window.pageYOffset > this.config.fixMoment) {\n          if (typeof this.config.breakpointsMap['md'] === 'undefined') {\n            this.element.classList.remove('navbar-scrolled');\n          } else {\n            this.element.classList.add('navbar-scrolled');\n          }\n        }\n\n        return this;\n      }\n\n      if (window.innerWidth > this.config.breakpointsMap['lg'] && this.observers['lg'].length) {\n        this.prevViewport = this.viewport;\n        this.viewport = 'lg';\n\n        if (this.config.fixMoment && window.pageYOffset > this.config.fixMoment) {\n          if (typeof this.config.breakpointsMap['lg'] === 'undefined') {\n            this.element.classList.remove('navbar-scrolled');\n          } else {\n            this.element.classList.add('navbar-scrolled');\n          }\n        }\n\n        return this;\n      }\n\n      if (window.innerWidth > this.config.breakpointsMap['xl'] && this.observers['xl'].length) {\n        this.prevViewport = this.viewport;\n        this.viewport = 'xl';\n\n        if (this.config.fixMoment && window.pageYOffset > this.config.fixMoment) {\n          if (typeof this.config.breakpointsMap['xl'] === 'undefined') {\n            this.element.classList.remove('navbar-scrolled');\n          } else {\n            this.element.classList.add('navbar-scrolled');\n          }\n        }\n\n        return this;\n      }\n\n      if (this.prevViewport) this.prevViewport = this.viewport;\n\n      if (this.config.fixMoment && window.pageYOffset > this.config.fixMoment) {\n        if (typeof this.config.breakpointsMap['xs'] === 'undefined') {\n          this.element.classList.remove('navbar-scrolled');\n        } else {\n          this.element.classList.add('navbar-scrolled');\n        }\n      }\n\n      this.viewport = 'xs';\n      return this;\n    }\n  }, {\n    key: \"notify\",\n    value: function notify() {\n      if (this.prevViewport) {\n        this.observers[this.prevViewport].forEach(function (observer) {\n          observer.destroy();\n        });\n        this.prevViewport = null;\n      }\n\n      this.observers[this.viewport].forEach(function (observer) {\n        observer.check();\n      });\n      return this;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      for (var viewport in this.observers) {\n        this.observers[viewport].forEach(function (observer) {\n          observer.destroy();\n        });\n      }\n\n      this.prevViewport = null;\n      this.observers[this.viewport].forEach(function (observer) {\n        observer.reinit();\n      });\n      return this;\n    }\n  }]);\n\n  return HSHeader;\n}();\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/hs-header.js?");
    },
    "./src/js/observers/abstract.js": function srcJsObserversAbstractJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSAbstractObserver; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar HSAbstractObserver = /*#__PURE__*/function () {\n  function HSAbstractObserver(element) {\n    _classCallCheck(this, HSAbstractObserver);\n\n    this.element = element;\n    this.defaultState = true;\n  }\n\n  _createClass(HSAbstractObserver, [{\n    key: "reinit",\n    value: function reinit() {\n      this.destroy().init().check();\n    }\n  }]);\n\n  return HSAbstractObserver;\n}();\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/observers/abstract.js?');
    },
    "./src/js/observers/floating.js": function srcJsObserversFloatingJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSHeaderFloatingObserver; });\n/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/js/observers/abstract.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar HSHeaderFloatingObserver = /*#__PURE__*/function (_HSAbstractObserver) {\n  _inherits(HSHeaderFloatingObserver, _HSAbstractObserver);\n\n  var _super = _createSuper(HSHeaderFloatingObserver);\n\n  function HSHeaderFloatingObserver(element) {\n    var _this;\n\n    _classCallCheck(this, HSHeaderFloatingObserver);\n\n    _this = _super.call(this, element);\n    _this.dataSettings = _this.element.hasAttribute(\'data-hs-header-options\') ? JSON.parse(_this.element.getAttribute(\'data-hs-header-options\')) : {};\n    return _this;\n  }\n\n  _createClass(HSHeaderFloatingObserver, [{\n    key: "init",\n    value: function init() {\n      this.offset = this.element.offsetTop;\n      this.sections = this.element.querySelectorAll(\'.navbar-section\');\n      this.defaultState = true;\n      return this;\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      this.toDefaultState();\n      return this;\n    }\n  }, {\n    key: "check",\n    value: function check() {\n      var docScrolled = window.pageYOffset;\n\n      if (docScrolled > this.offset && this.defaultState) {\n        this.changeState();\n      } else if (docScrolled <= this.offset && !this.defaultState) {\n        this.toDefaultState();\n      }\n\n      return this;\n    }\n  }, {\n    key: "changeState",\n    value: function changeState() {\n      this.element.classList.add(\'navbar-scrolled\');\n      this.element.classList.add(this.dataSettings.fixMomentClasses);\n      this.element.classList.remove(this.dataSettings.fixMomentExclude);\n\n      if (this.sections.length) {\n        this.sections.forEach(function ($section) {\n          var dataSettings = $section.hasAttribute(\'data-hs-navbar-item-options\') ? JSON.parse($section.getAttribute(\'data-hs-navbar-item-options\')) : {};\n          $section.classList.add(dataSettings.fixMomentClasses);\n          $section.classList.remove(dataSettings.fixMomentExclude);\n        });\n      }\n\n      this.defaultState = !this.defaultState;\n      return this;\n    }\n  }, {\n    key: "toDefaultState",\n    value: function toDefaultState() {\n      this.element.classList.remove(\'navbar-scrolled\');\n      this.element.classList.remove(this.dataSettings.fixMomentClasses);\n      this.element.classList.add(this.dataSettings.fixMomentExclude);\n\n      if (this.sections.length) {\n        this.sections.forEach(function ($section) {\n          var dataSettings = $section.hasAttribute(\'data-hs-navbar-item-options\') ? JSON.parse($section.getAttribute(\'data-hs-navbar-item-options\')) : {};\n          $section.classList.add(dataSettings.fixMomentClasses);\n          $section.classList.remove(dataSettings.fixMomentExclude);\n        });\n      }\n\n      this.defaultState = !this.defaultState;\n      return this;\n    }\n  }]);\n\n  return HSHeaderFloatingObserver;\n}(_abstract__WEBPACK_IMPORTED_MODULE_0__["default"]);\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/observers/floating.js?');
    },
    "./src/js/observers/has-hidden-element.js": function srcJsObserversHasHiddenElementJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSHeaderHasHiddenElement; });\n/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/js/observers/abstract.js");\n/* harmony import */ var _utils_slideUp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/slideUp */ "./src/js/utils/slideUp.js");\n/* harmony import */ var _utils_slideDown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/slideDown */ "./src/js/utils/slideDown.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar HSHeaderHasHiddenElement = /*#__PURE__*/function (_HSAbstractObserver) {\n  _inherits(HSHeaderHasHiddenElement, _HSAbstractObserver);\n\n  var _super = _createSuper(HSHeaderHasHiddenElement);\n\n  function HSHeaderHasHiddenElement(element) {\n    var _this;\n\n    _classCallCheck(this, HSHeaderHasHiddenElement);\n\n    _this = _super.call(this, element);\n    _this.config = {\n      animated: true\n    };\n    _this.dataSettings = _this.element.hasAttribute(\'data-hs-header-options\') ? JSON.parse(_this.element.getAttribute(\'data-hs-header-options\')) : {};\n    return _this;\n  }\n\n  _createClass(HSHeaderHasHiddenElement, [{\n    key: "init",\n    value: function init() {\n      this.offset = isFinite(this.dataSettings.fixMoment) ? this.dataSettings.fixMoment : 5;\n      this.elements = this.element.querySelectorAll(\'.navbar-hidden-element\');\n      this.defaultState = true;\n      return this;\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      this.toDefaultState();\n      return this;\n    }\n  }, {\n    key: "check",\n    value: function check() {\n      if (!this.elements.length) return this;\n      var docScrolled = window.pageYOffset;\n\n      if (docScrolled > this.offset && this.defaultState) {\n        this.changeState();\n      } else if (docScrolled <= this.offset && !this.defaultState) {\n        this.toDefaultState();\n      }\n\n      return this;\n    }\n  }, {\n    key: "changeState",\n    value: function changeState() {\n      if (this.config.animated) {\n        this.elements.forEach(function (item) {\n          Object(_utils_slideUp__WEBPACK_IMPORTED_MODULE_1__["default"])(item);\n        });\n      } else {\n        this.elements.forEach(function (item) {\n          item.style.display = \'none\';\n        });\n      }\n\n      this.defaultState = !this.defaultState;\n      return this;\n    }\n  }, {\n    key: "toDefaultState",\n    value: function toDefaultState() {\n      if (this.config.animated) {\n        this.elements.forEach(function (item) {\n          Object(_utils_slideDown__WEBPACK_IMPORTED_MODULE_2__["default"])(item);\n        });\n      } else {\n        this.elements.forEach(function (item) {\n          item.style.display = \'block\';\n        });\n      }\n\n      this.defaultState = !this.defaultState;\n      return this;\n    }\n  }]);\n\n  return HSHeaderHasHiddenElement;\n}(_abstract__WEBPACK_IMPORTED_MODULE_0__["default"]);\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/observers/has-hidden-element.js?');
    },
    "./src/js/observers/hide-section.js": function srcJsObserversHideSectionJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSHeaderHideSectionObserver; });\n/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/js/observers/abstract.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar HSHeaderHideSectionObserver = /*#__PURE__*/function (_HSAbstractObserver) {\n  _inherits(HSHeaderHideSectionObserver, _HSAbstractObserver);\n\n  var _super = _createSuper(HSHeaderHideSectionObserver);\n\n  function HSHeaderHideSectionObserver(element) {\n    var _this;\n\n    _classCallCheck(this, HSHeaderHideSectionObserver);\n\n    _this = _super.call(this, element);\n    _this.dataSettings = _this.element.hasAttribute(\'data-hs-header-options\') ? JSON.parse(_this.element.getAttribute(\'data-hs-header-options\')) : {};\n    return _this;\n  }\n\n  _createClass(HSHeaderHideSectionObserver, [{\n    key: "init",\n    value: function init() {\n      this.offset = isFinite(this.dataSettings.fixMoment) ? this.dataSettings.fixMoment : 5;\n      this.section = this.element.querySelector(\'.navbar-section-hidden\');\n      this.defaultState = true;\n      this.sectionHeight = this.section ? this.section.offsetHeight : 0;\n      return this;\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      if (this.section) {\n        this.element.transition = \'margin-top .5s\';\n        this.element.style.marginTop = 0;\n      }\n\n      return this;\n    }\n  }, {\n    key: "check",\n    value: function check() {\n      if (!this.section) return this;\n      var docScrolled = window.pageYOffset;\n\n      if (docScrolled > this.offset && this.defaultState) {\n        this.changeState();\n      } else if (docScrolled <= this.offset && !this.defaultState) {\n        this.toDefaultState();\n      }\n\n      return this;\n    }\n  }, {\n    key: "changeState",\n    value: function changeState() {\n      var self = this;\n      this.element.transition = \'margin-top .5s\';\n      this.element.style.marginTop = self.sectionHeight * -1 - 1 + \'px\';\n      this.defaultState = !this.defaultState;\n      return this;\n    }\n  }, {\n    key: "toDefaultState",\n    value: function toDefaultState() {\n      this.element.transition = \'margin-top .5s\';\n      this.element.style.marginTop = 0;\n      this.defaultState = !this.defaultState;\n      return this;\n    }\n  }]);\n\n  return HSHeaderHideSectionObserver;\n}(_abstract__WEBPACK_IMPORTED_MODULE_0__["default"]);\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/observers/hide-section.js?');
    },
    "./src/js/observers/moment-show-hide.js": function srcJsObserversMomentShowHideJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSHeaderMomentShowHideObserver; });\n/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/js/observers/abstract.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar HSHeaderMomentShowHideObserver = /*#__PURE__*/function (_HSAbstractObserver) {\n  _inherits(HSHeaderMomentShowHideObserver, _HSAbstractObserver);\n\n  var _super = _createSuper(HSHeaderMomentShowHideObserver);\n\n  function HSHeaderMomentShowHideObserver(element) {\n    var _this;\n\n    _classCallCheck(this, HSHeaderMomentShowHideObserver);\n\n    _this = _super.call(this, element);\n    _this.dataSettings = _this.element.hasAttribute(\'data-hs-header-options\') ? JSON.parse(_this.element.getAttribute(\'data-hs-header-options\')) : {};\n    return _this;\n  }\n\n  _createClass(HSHeaderMomentShowHideObserver, [{\n    key: "init",\n    value: function init() {\n      this.direction = \'down\';\n      this.delta = 0;\n      this.defaultState = true;\n      this.offset = isFinite(this.dataSettings.fixMoment) && this.dataSettings.fixMoment !== 0 ? this.dataSettings.fixMoment : 5;\n      this.effect = this.dataSettings.fixEffect ? this.dataSettings.fixEffect : \'show-hide\';\n      return this;\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      this.toDefaultState();\n      return this;\n    }\n  }, {\n    key: "checkDirection",\n    value: function checkDirection() {\n      if (window.pageYOffset > this.delta) {\n        this.direction = \'down\';\n      } else {\n        this.direction = \'up\';\n      }\n\n      this.delta = window.pageYOffset;\n      return this;\n    }\n  }, {\n    key: "toDefaultState",\n    value: function toDefaultState() {\n      switch (this.effect) {\n        case \'slide\':\n          this.element.classList.remove(\'navbar-moved-up\');\n          break;\n\n        case \'fade\':\n          this.element.classList.remove(\'navbar-faded\');\n          break;\n\n        default:\n          this.element.classList.remove(\'navbar-invisible\');\n      }\n\n      this.defaultState = !this.defaultState;\n      return this;\n    }\n  }, {\n    key: "changeState",\n    value: function changeState() {\n      switch (this.effect) {\n        case \'slide\':\n          this.element.classList.add(\'navbar-moved-up\');\n          break;\n\n        case \'fade\':\n          this.element.classList.add(\'navbar-faded\');\n          break;\n\n        default:\n          this.element.classList.add(\'navbar-invisible\');\n      }\n\n      this.defaultState = !this.defaultState;\n      return this;\n    }\n  }, {\n    key: "check",\n    value: function check() {\n      var docScrolled = window.pageYOffset;\n      this.checkDirection();\n\n      if (docScrolled >= this.offset && this.defaultState && this.direction === \'down\') {\n        this.changeState();\n      } else if (!this.defaultState && this.direction === \'up\') {\n        this.toDefaultState();\n      }\n\n      return this;\n    }\n  }]);\n\n  return HSHeaderMomentShowHideObserver;\n}(_abstract__WEBPACK_IMPORTED_MODULE_0__["default"]);\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/observers/moment-show-hide.js?');
    },
    "./src/js/observers/show-hide.js": function srcJsObserversShowHideJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return HSHeaderShowHideObserver; });\n/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ \"./src/js/observers/abstract.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar HSHeaderShowHideObserver = /*#__PURE__*/function (_HSAbstractObserver) {\n  _inherits(HSHeaderShowHideObserver, _HSAbstractObserver);\n\n  var _super = _createSuper(HSHeaderShowHideObserver);\n\n  function HSHeaderShowHideObserver(element, config) {\n    var _this;\n\n    _classCallCheck(this, HSHeaderShowHideObserver);\n\n    _this = _super.call(this, element, config);\n    _this.dataSettings = _this.element.hasAttribute('data-hs-header-options') ? JSON.parse(_this.element.getAttribute('data-hs-header-options')) : {};\n    _this.config = config;\n    return _this;\n  }\n\n  _createClass(HSHeaderShowHideObserver, [{\n    key: \"init\",\n    value: function init() {\n      if (!this.defaultState && window.pageYOffset > this.offset) return this;\n      this.defaultState = true;\n      this.transitionDuration = parseFloat(getComputedStyle(this.element)['transition-duration'], 10) * 1000;\n      this.offset = isFinite(this.dataSettings.fixMoment) && this.dataSettings.fixMoment > this.element.offsetHeight ? this.dataSettings.fixMoment : this.element.offsetHeight + 100;\n      this.effect = this.dataSettings.fixEffect ? this.dataSettings.fixEffect : 'show-hide';\n      return this;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (!this.defaultState && window.pageYOffset > this.offset) return this;\n      this.element.classList.remove('navbar-untransitioned');\n\n      this._removeCap();\n\n      return this;\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (window.pageYOffset > this.element.offsetHeight && !this.capInserted) {\n        this._insertCap();\n      } else if (window.pageYOffset <= this.element.offsetHeight && this.capInserted) {\n        this._removeCap();\n      }\n\n      if (window.pageYOffset > this.offset && this.defaultState) {\n        this.changeState();\n      } else if (window.pageYOffset <= this.offset && !this.defaultState) {\n        this.toDefaultState();\n      }\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState() {\n      if (this.config.fixMomentClasses) {\n        var _this$element$classLi;\n\n        (_this$element$classLi = this.element.classList).add.apply(_this$element$classLi, _toConsumableArray(this.config.fixMomentClasses));\n      }\n\n      this.element.classList.remove('navbar-untransitioned');\n      if (this.animationTimeoutId) clearTimeout(this.animationTimeoutId);\n\n      switch (this.effect) {\n        case 'fade':\n          this.element.classList.remove('navbar-faded');\n          break;\n\n        case 'slide':\n          this.element.classList.remove('navbar-moved-up');\n          break;\n\n        default:\n          this.element.classList.remove('navbar-invisible');\n      }\n\n      this.defaultState = !this.defaultState;\n    }\n  }, {\n    key: \"toDefaultState\",\n    value: function toDefaultState() {\n      var self = this;\n\n      if (this.config.fixMomentClasses) {\n        var _this$element$classLi2;\n\n        (_this$element$classLi2 = this.element.classList).remove.apply(_this$element$classLi2, _toConsumableArray(this.config.fixMomentClasses));\n      }\n\n      this.animationTimeoutId = setTimeout(function () {\n        self.element.classList.add('navbar-untransitioned');\n      }, this.transitionDuration);\n\n      switch (this.effect) {\n        case 'fade':\n          this.element.classList.add('navbar-faded');\n          break;\n\n        case 'slide':\n          this.element.classList.add('navbar-moved-up');\n          break;\n\n        default:\n          this.element.classList.add('navbar-invisible');\n      }\n\n      this.defaultState = !this.defaultState;\n    }\n  }, {\n    key: \"_insertCap\",\n    value: function _insertCap() {\n      this.element.classList.add('navbar-scrolled', 'navbar-untransitioned');\n\n      if (this.element.classList.contains('navbar-static')) {\n        document.documentElement.style.paddingTop = this.element.offsetHeight;\n      }\n\n      switch (this.effect) {\n        case 'fade':\n          this.element.classList.add('navbar-faded');\n          break;\n\n        case 'slide':\n          this.element.classList.add('navbar-moved-up');\n          break;\n\n        default:\n          this.element.classList.add('navbar-invisible');\n      }\n\n      this.capInserted = true;\n    }\n  }, {\n    key: \"_removeCap\",\n    value: function _removeCap() {\n      var self = this;\n      this.element.classList.remove('navbar-scrolled');\n\n      if (this.element.classList.contains('navbar-static')) {\n        document.documentElement.style.paddingTop = 0;\n      }\n\n      if (this.removeCapTimeOutId) clearTimeout(this.removeCapTimeOutId);\n      this.removeCapTimeOutId = setTimeout(function () {\n        self.element.classList.remove('navbar-moved-up', 'navbar-faded', 'navbar-invisible');\n      }, 10);\n      this.capInserted = false;\n    }\n  }]);\n\n  return HSHeaderShowHideObserver;\n}(_abstract__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/observers/show-hide.js?");
    },
    "./src/js/observers/sticky.js": function srcJsObserversStickyJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSHeaderStickObserver; });\n/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/js/observers/abstract.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar HSHeaderStickObserver = /*#__PURE__*/function (_HSAbstractObserver) {\n  _inherits(HSHeaderStickObserver, _HSAbstractObserver);\n\n  var _super = _createSuper(HSHeaderStickObserver);\n\n  function HSHeaderStickObserver(element) {\n    var _this;\n\n    _classCallCheck(this, HSHeaderStickObserver);\n\n    _this = _super.call(this, element);\n    _this.dataSettings = _this.element.hasAttribute(\'data-hs-header-options\') ? JSON.parse(_this.element.getAttribute(\'data-hs-header-options\')) : {};\n    return _this;\n  }\n\n  _createClass(HSHeaderStickObserver, [{\n    key: "init",\n    value: function init() {\n      this.defaultState = true;\n      this.offset = this.element.offsetTop;\n      return this;\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      this.toDefaultState();\n      return this;\n    }\n  }, {\n    key: "check",\n    value: function check() {\n      var docScrolled = window.pageYOffset;\n\n      if (docScrolled > this.offset && this.defaultState) {\n        this.changeState();\n      } else if (docScrolled <= this.offset && !this.defaultState) {\n        this.toDefaultState();\n      }\n\n      return this;\n    }\n  }, {\n    key: "changeState",\n    value: function changeState() {\n      this.element.classList.add(\'navbar-scrolled\');\n      this.defaultState = !this.defaultState;\n      this.element.classList.add(this.dataSettings.fixMomentClasses);\n      this.element.classList.remove(this.dataSettings.fixMomentExclude);\n      return this;\n    }\n  }, {\n    key: "toDefaultState",\n    value: function toDefaultState() {\n      this.element.classList.remove(\'navbar-scrolled\');\n      this.defaultState = !this.defaultState;\n      this.element.classList.remove(this.dataSettings.fixMomentClasses);\n      this.element.classList.add(this.dataSettings.fixMomentExclude);\n      return this;\n    }\n  }]);\n\n  return HSHeaderStickObserver;\n}(_abstract__WEBPACK_IMPORTED_MODULE_0__["default"]);\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/observers/sticky.js?');
    },
    "./src/js/observers/without-behavior.js": function srcJsObserversWithoutBehaviorJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSHeaderWithoutBehaviorObserver; });\n/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/js/observers/abstract.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar HSHeaderWithoutBehaviorObserver = /*#__PURE__*/function (_HSAbstractObserver) {\n  _inherits(HSHeaderWithoutBehaviorObserver, _HSAbstractObserver);\n\n  var _super = _createSuper(HSHeaderWithoutBehaviorObserver);\n\n  function HSHeaderWithoutBehaviorObserver(element) {\n    _classCallCheck(this, HSHeaderWithoutBehaviorObserver);\n\n    return _super.call(this, element);\n  }\n\n  _createClass(HSHeaderWithoutBehaviorObserver, [{\n    key: "init",\n    value: function init() {\n      return this;\n    }\n  }, {\n    key: "check",\n    value: function check() {\n      return this;\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      return this;\n    }\n  }, {\n    key: "changeState",\n    value: function changeState() {\n      return this;\n    }\n  }, {\n    key: "toDefaultState",\n    value: function toDefaultState() {\n      return this;\n    }\n  }]);\n\n  return HSHeaderWithoutBehaviorObserver;\n}(_abstract__WEBPACK_IMPORTED_MODULE_0__["default"]);\n\n\n\n//# sourceURL=webpack://HSHeader/./src/js/observers/without-behavior.js?');
    },
    "./src/js/utils/slideDown.js": function srcJsUtilsSlideDownJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\nvar slideDown = function slideDown(target) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  target.style.removeProperty('display');\n  var display = window.getComputedStyle(target).display;\n  if (display === 'none') display = 'block';\n  target.style.display = display;\n  var height = target.offsetHeight;\n  target.style.overflow = 'hidden';\n  target.style.height = 0;\n  target.style.paddingTop = 0;\n  target.style.paddingBottom = 0;\n  target.style.marginTop = 0;\n  target.style.marginBottom = 0;\n  target.offsetHeight;\n  target.style.boxSizing = 'border-box';\n  target.style.transitionProperty = \"height, margin, padding\";\n  target.style.transitionDuration = duration + 'ms';\n  target.style.height = height + 'px';\n  target.style.removeProperty('padding-top');\n  target.style.removeProperty('padding-bottom');\n  target.style.removeProperty('margin-top');\n  target.style.removeProperty('margin-bottom');\n  window.setTimeout(function () {\n    target.style.removeProperty('height');\n    target.style.removeProperty('overflow');\n    target.style.removeProperty('transition-duration');\n    target.style.removeProperty('transition-property');\n  }, duration);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (slideDown);\n\n//# sourceURL=webpack://HSHeader/./src/js/utils/slideDown.js?");
    },
    "./src/js/utils/slideUp.js": function srcJsUtilsSlideUpJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\nvar slideUp = function slideUp(target) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  target.style.transitionProperty = 'height, margin, padding';\n  target.style.transitionDuration = duration + 'ms';\n  target.style.boxSizing = 'border-box';\n  target.style.height = target.offsetHeight + 'px';\n  target.offsetHeight;\n  target.style.overflow = 'hidden';\n  target.style.height = 0;\n  target.style.paddingTop = 0;\n  target.style.paddingBottom = 0;\n  target.style.marginTop = 0;\n  target.style.marginBottom = 0;\n  window.setTimeout(function () {\n    target.style.display = 'none';\n    target.style.removeProperty('height');\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n    target.style.removeProperty('overflow');\n    target.style.removeProperty('transition-duration');\n    target.style.removeProperty('transition-property'); //alert(\"!\");\n  }, duration);\n  return target;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (slideUp);\n\n//# sourceURL=webpack://HSHeader/./src/js/utils/slideUp.js?");
    }
  }, e = {}, f.m = d, f.c = e, f.d = function (e, t, n) {
    f.o(e, t) || Object.defineProperty(e, t, {
      enumerable: !0,
      get: n
    });
  }, f.r = function (e) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
      value: "Module"
    }), Object.defineProperty(e, "__esModule", {
      value: !0
    });
  }, f.t = function (t, e) {
    if (1 & e && (t = f(t)), 8 & e) return t;
    if (4 & e && "object" == _typeof(t) && t && t.__esModule) return t;
    var n = Object.create(null);
    if (f.r(n), Object.defineProperty(n, "default", {
      enumerable: !0,
      value: t
    }), 2 & e && "string" != typeof t) for (var r in t) f.d(n, r, function (e) {
      return t[e];
    }.bind(null, r));
    return n;
  }, f.n = function (e) {
    var t = e && e.__esModule ? function () {
      return e["default"];
    } : function () {
      return e;
    };
    return f.d(t, "a", t), t;
  }, f.o = function (e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
  }, f.p = "", f(f.s = "./src/js/hs-header.js")["default"];
  function f(t) {
    if (e[t]) return e[t].exports;
    var n = e[t] = {
      i: t,
      l: !1,
      exports: {}
    };
    return d[t].call(n.exports, n, n.exports, f), n.l = !0, n.exports;
  }
  var d, e;
});

/***/ }),

/***/ "./assets/vendor/hs-mega-menu/dist/hs-mega-menu.min.js":
/*!*************************************************************!*\
  !*** ./assets/vendor/hs-mega-menu/dist/hs-mega-menu.min.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! core-js/modules/es.symbol.to-string-tag.js */ "./node_modules/core-js/modules/es.symbol.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.json.to-string-tag.js */ "./node_modules/core-js/modules/es.json.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.math.to-string-tag.js */ "./node_modules/core-js/modules/es.math.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.object.create.js */ "./node_modules/core-js/modules/es.object.create.js");
__webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (e, n) {
  "object" == ( false ? 0 : _typeof(exports)) && "object" == ( false ? 0 : _typeof(module)) ? module.exports = n() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (n),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
}(window, function () {
  return d = {
    "./src/js/hs-mega-menu.js": function srcJsHsMegaMenuJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSMegaMenu; });\n/* harmony import */ var _methods_object_assign_deep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./methods/object-assign-deep */ "./src/js/methods/object-assign-deep.js");\n/* harmony import */ var _methods_object_assign_deep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_methods_object_assign_deep__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _methods_get_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./methods/get-type */ "./src/js/methods/get-type.js");\n/* harmony import */ var _methods_smart_position__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./methods/smart-position */ "./src/js/methods/smart-position.js");\n/* harmony import */ var _methods_desktop_css_animation_enable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./methods/desktop-css-animation-enable */ "./src/js/methods/desktop-css-animation-enable.js");\n/* harmony import */ var _methods_desktop_mouseenter_event_listener__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./methods/desktop-mouseenter-event-listener */ "./src/js/methods/desktop-mouseenter-event-listener.js");\n/* harmony import */ var _methods_desktop_mouseleave_event_listener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./methods/desktop-mouseleave-event-listener */ "./src/js/methods/desktop-mouseleave-event-listener.js");\n/* harmony import */ var _methods_desktop_click_event_listener__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./methods/desktop-click-event-listener */ "./src/js/methods/desktop-click-event-listener.js");\n/* harmony import */ var _methods_mobile_click_event_listener__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./methods/mobile-click-event-listener */ "./src/js/methods/mobile-click-event-listener.js");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n* HSMegaMenu Plugin\n* @version: 2.0.1 (Sun, 1 Nov 2021)\n* @author: HtmlStream\n* @event-namespace: .HSMegaMenu\n* @license: Htmlstream Libraries (https://htmlstream.com/)\n* Copyright 2021 Htmlstream\n*/\n\n\n\n\n\n\n\n\nvar dataAttributeName = \'data-hs-mega-menu-options\';\nvar defaults = {\n  eventType: \'hover\',\n  direction: \'horizontal\',\n  breakpoint: \'lg\',\n  rtl: false,\n  isMenuOpened: false,\n  sideBarRatio: 1 / 4,\n  pageContainer: document.getElementsByTagName(\'body\'),\n  mobileSpeed: 400,\n  duration: 300,\n  delay: 0,\n  itemOptions: {\n    megaMenuTimeOut: null,\n    desktop: {\n      animation: \'animated\',\n      animationIn: \'slideInUp\',\n      animationOut: false,\n      position: null,\n      maxWidth: null\n    }\n  },\n  classMap: {\n    rtl: \'.hs-rtl\',\n    reversed: \'.hs-reversed\',\n    initialized: \'.hs-menu-initialized\',\n    mobileState: \'.hs-mobile-state\',\n    invoker: \'.hs-mega-menu-invoker\',\n    subMenu: \'.hs-sub-menu\',\n    hasSubMenu: \'.hs-has-sub-menu\',\n    hasSubMenuActive: \'.hs-sub-menu-opened\',\n    megaMenu: \'.hs-mega-menu\',\n    hasMegaMenu: \'.hs-has-mega-menu\',\n    hasMegaMenuActive: \'.hs-mega-menu-opened\'\n  }\n};\n\nvar HSMegaMenu = /*#__PURE__*/function () {\n  function HSMegaMenu(el, options, id) {\n    _classCallCheck(this, HSMegaMenu);\n\n    this.collection = [];\n    var that = this;\n    var elems;\n\n    if (el instanceof HTMLElement) {\n      elems = [el];\n    } else if (el instanceof Object) {\n      elems = el;\n    } else {\n      elems = document.querySelectorAll(el);\n    }\n\n    for (var i = 0; i < elems.length; i += 1) {\n      that.addToCollection(elems[i], options, id || elems[i].id);\n    }\n\n    if (!that.collection.length) {\n      return false;\n    } // initialization calls\n\n\n    that._init();\n\n    return this;\n  }\n\n  _createClass(HSMegaMenu, [{\n    key: "_init",\n    value: function _init() {\n      var _this = this;\n\n      var that = this;\n\n      var _loop = function _loop(i) {\n        var _$el = void 0;\n\n        var _options = void 0;\n\n        if (that.collection[i].hasOwnProperty(\'$initializedEl\')) {\n          return "continue";\n        }\n\n        _$el = that.collection[i].$el;\n        _options = that.collection[i].options;\n        _options.state = null; // Resolution list\n\n        resolutionsList = {\n          xs: 0,\n          sm: 576,\n          md: 768,\n          lg: 992,\n          xl: 1200\n        }; // Keycodes\n\n        ESC_KEYCODE = 27;\n        TAB_KEYCODE = 9;\n        ENTER_KEYCODE = 13;\n        SPACE_KEYCODE = 32;\n        ARROW_UP_KEYCODE = 38;\n        ARROW_DOWN_KEYCODE = 40;\n        ARROW_RIGHT_KEYCODE = 39;\n        ARROW_LEFT_KEYCODE = 37; // Prevent scroll\n\n        var preventScroll = function preventScroll(keycode) {\n          return function (e) {\n            if (e.which === keycode) {\n              e.preventDefault();\n            }\n          };\n        }; // Get Item Settings\n\n\n        var getItemSettings = function getItemSettings($el) {\n          if (!$el) return false;\n          var dataSettings = $el.hasAttribute(\'data-hs-mega-menu-item-options\') ? JSON.parse($el.getAttribute(\'data-hs-mega-menu-item-options\')) : {},\n              itemSettings = _options.itemOptions;\n          itemSettings = Object.assign({}, itemSettings, dataSettings);\n\n          itemSettings.activeItemClass = function () {\n            return Object(_methods_get_type__WEBPACK_IMPORTED_MODULE_1__["default"])($el, _options) === \'mega-menu\' ? _options.classMap.hasMegaMenuActive : _options.classMap.hasSubMenuActive;\n          };\n\n          return itemSettings;\n        };\n\n        var stateDetection = function stateDetection() {\n          if (window.innerWidth < resolutionsList[_options.breakpoint]) {\n            _this.state = \'mobile\';\n          } else {\n            _this.state = \'desktop\';\n          }\n        };\n\n        stateDetection(); // State Detection\n\n        window.addEventListener(\'resize\', function () {\n          stateDetection();\n        }); // Set RTL\n\n        if (_options.rtl) {\n          _$el.addClass(_options.classMap.rtl.slice(1));\n        } // Init Menu Items\n\n\n        _$el.querySelectorAll("".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)).forEach(function (el) {\n          _this.MegaMenuItem(el, el.querySelector(_options.classMap[Object(_methods_get_type__WEBPACK_IMPORTED_MODULE_1__["default"])(el, _options) === \'mega-menu\' ? \'megaMenu\' : \'subMenu\']), _options);\n        }); // Add Initialized Classes\n\n\n        _$el.classList.add("".concat(_options.classMap.initialized.slice(1)), "hs-menu-".concat(_options.direction)); // *****\n        // Start: ACCESSIBILITY\n        // *****\n\n\n        myPreventScrollSpace = preventScroll(SPACE_KEYCODE);\n        myPreventScrollDown = preventScroll(ARROW_DOWN_KEYCODE);\n        myPreventScrollUp = preventScroll(ARROW_UP_KEYCODE);\n        var $items = void 0,\n            index = void 0,\n            state = null;\n        document.addEventListener(\'keyup\', function () {\n          window.removeEventListener(\'keydown\', myPreventScrollSpace, false);\n          window.removeEventListener(\'keydown\', myPreventScrollUp, false);\n          window.removeEventListener(\'keydown\', myPreventScrollDown, false);\n        });\n        document.addEventListener(\'keyup\', function (e) {\n          if (!e.target.closest("".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)) || e.target.closest(\'input\')) return false; //\n          // Start: PREVENT SCROLL\n          //\n\n          e.preventDefault();\n          e.stopPropagation();\n          window.addEventListener(\'keydown\', myPreventScrollSpace, false);\n          window.addEventListener(\'keydown\', myPreventScrollUp, false);\n          window.addEventListener(\'keydown\', myPreventScrollDown, false); //\n          // End: PREVENT SCROLL\n          //\n          //\n          // Start: ELEMENT DETECTION\n          //\n\n          if (e.target.classList.contains(_options.classMap.invoker.slice(1)) && !e.target.closest(["".concat(_options.classMap.subMenu, ", ").concat(_options.classMap.megaMenu)])) {\n            // console.log(\'Top level\');\n            if (state !== \'topLevel\') {\n              state = \'topLevel\';\n            }\n\n            $items = [].slice.call(e.target.parentNode.parentNode.querySelectorAll(_options.classMap.invoker)).filter(function (item) {\n              if (!item.closest(["".concat(_options.classMap.subMenu, ", ").concat(_options.classMap.megaMenu)])) {\n                return item.offsetParent !== null;\n              }\n            });\n          } else if (e.target.closest(["".concat(_options.classMap.subMenu, ", ").concat(_options.classMap.megaMenu)]) && e.target.parentNode.querySelector("".concat(_options.classMap.subMenu, ", ").concat(_options.classMap.megaMenu))) {\n            // console.log(\'Has submenu and not top level\');\n            if (state !== \'hasSubmenu\') {\n              state = \'hasSubmenu\';\n            }\n\n            $items = [].slice.call(e.target.parentNode.parentNode.querySelectorAll(_options.classMap.invoker)).filter(function (item) {\n              return item.offsetParent !== null;\n            });\n          } else {\n            // console.log(\'Just element\');\n            if (state !== \'simple\') {\n              state = \'simple\';\n            }\n\n            $items = [].slice.call(e.target.closest(["".concat(_options.classMap.subMenu, ", ").concat(_options.classMap.megaMenu)]).querySelectorAll(\'a, button\')).filter(function (item) {\n              return item.offsetParent !== null;\n            });\n          } //\n          // End: ELEMENT DETECTION\n          //\n\n\n          index = $items.indexOf(e.target); //\n          // Start: TOP LEVEL\n          //\n          // Left\n\n          if (state === \'topLevel\' && e.which === ARROW_LEFT_KEYCODE && index > 0) {\n            index--;\n          } // Right\n\n\n          if (state === \'topLevel\' && e.which === ARROW_RIGHT_KEYCODE && index < $items.length - 1) {\n            index++;\n          } // Open Sub\n\n\n          if (state === \'topLevel\' && (e.which === ARROW_DOWN_KEYCODE || e.which === SPACE_KEYCODE || e.which === ENTER_KEYCODE)) {\n            if (!e.target.parentNode.querySelector(["".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)])) {\n              Object(_methods_desktop_mouseenter_event_listener__WEBPACK_IMPORTED_MODULE_4__["default"])(e.target.parentNode, e.target.parentNode.querySelector(["".concat(_options.classMap.subMenu, ", ").concat(_options.classMap.megaMenu)]), _options, getItemSettings(e.target.parentNode))();\n            } else if (e.target.parentNode.querySelector(["".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)])) {\n              e.target.parentNode.querySelector(["".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)]).querySelectorAll(\'a\')[0].focus();\n              return;\n            }\n          } // Close Siblings\n\n\n          if (state === \'topLevel\' && (e.which === TAB_KEYCODE || e.which === ARROW_RIGHT_KEYCODE || e.which === ARROW_LEFT_KEYCODE) && e.target.closest("".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)).parentNode.querySelector("".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn))) {\n            Object(_methods_desktop_mouseleave_event_listener__WEBPACK_IMPORTED_MODULE_5__["default"])(e.target.closest("".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)), e.target.closest("".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)).parentNode.querySelector("".concat(_options.classMap.hasMegaMenuActive, " > ").concat(_options.classMap.megaMenu, ", ").concat(_options.classMap.hasSubMenuActive, " > ").concat(_options.classMap.subMenu)), _options, getItemSettings(e.target.closest("".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu))))();\n          } //\n          // End: TOP LEVEL\n          //\n          //\n          // Start: HAS SUB-MENU BUT NOT TOP LEVEL\n          //\n          // Up\n\n\n          if (state === \'hasSubmenu\' && e.which === ARROW_UP_KEYCODE && index > 0) {\n            index--;\n          } // Down\n\n\n          if (state === \'hasSubmenu\' && e.which === ARROW_DOWN_KEYCODE && index < $items.length - 1) {\n            index++;\n          } // Open Sub\n\n\n          if (state === \'hasSubmenu\' && (e.which === ARROW_LEFT_KEYCODE || e.which === ARROW_RIGHT_KEYCODE || e.which === SPACE_KEYCODE || e.which === ENTER_KEYCODE)) {\n            if (!e.target.parentNode.querySelector(["".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)])) {\n              Object(_methods_desktop_mouseenter_event_listener__WEBPACK_IMPORTED_MODULE_4__["default"])(e.target.parentNode, e.target.parentNode.querySelector(["".concat(_options.classMap.subMenu, ", ").concat(_options.classMap.megaMenu)]), _options, getItemSettings(e.target.parentNode))();\n            } else if (e.target.parentNode.querySelector(["".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)])) {\n              e.target.parentNode.querySelector(["".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)]).querySelectorAll(\'a\')[0].focus();\n              return;\n            }\n          } // Close Siblings\n\n\n          if (state === \'hasSubmenu\' && (e.which === TAB_KEYCODE || e.which === ARROW_DOWN_KEYCODE || e.which === ARROW_UP_KEYCODE) && e.target.closest(["".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)]).parentNode.querySelectorAll("".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)).length) {\n            Object(_methods_desktop_mouseleave_event_listener__WEBPACK_IMPORTED_MODULE_5__["default"])(e.target.closest(["".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)]), e.target.closest(["".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)]).parentNode.querySelector("".concat(_options.classMap.hasMegaMenuActive, " > ").concat(_options.classMap.megaMenu, ", ").concat(_options.classMap.hasSubMenuActive, " > ").concat(_options.classMap.subMenu)), _options, getItemSettings(e.target.closest(["".concat(_options.classMap.hasMegaMenu, ", ").concat(_options.classMap.hasSubMenu)])))();\n          } //\n          // End: HAS SUB-MENU BUT NOT TOP LEVEL\n          //\n          //\n          // Start: SIMPLE\n          //\n          // Left, Up\n\n\n          if (state === \'simple\' && e.which === ARROW_UP_KEYCODE && index > 0) {\n            index--;\n          } // Right, Down\n\n\n          if (state === \'simple\' && e.which === ARROW_DOWN_KEYCODE && index < $items.length - 1) {\n            index++;\n          } // Close Siblings\n\n\n          if (state === \'simple\' && (e.which === ARROW_RIGHT_KEYCODE || e.which === ARROW_LEFT_KEYCODE) && e.target.closest(_options.classMap.hasSubMenu).parentNode.querySelector(_options.classMap.subMenu)) {\n            e.target.closest(_options.classMap.hasSubMenu).querySelector(_options.classMap.invoker).focus();\n            Object(_methods_desktop_mouseleave_event_listener__WEBPACK_IMPORTED_MODULE_5__["default"])(e.target.closest(_options.classMap.hasSubMenu), e.target.closest(_options.classMap.hasSubMenu).parentNode.querySelector("".concat(_options.classMap.hasSubMenuActive, " > ").concat(_options.classMap.subMenu)), _options, getItemSettings(e.target.closest(_options.classMap.hasSubMenu)))();\n            return;\n          } //\n          // End: SIMPLE\n          //\n          // Close Self\n\n\n          if (e.which === ESC_KEYCODE && _this.state === \'desktop\' && document.querySelector("".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn))) {\n            Object(_methods_desktop_mouseleave_event_listener__WEBPACK_IMPORTED_MODULE_5__["default"])(document.querySelector("".concat(_options.classMap.hasMegaMenuActive, ", ").concat(_options.classMap.hasSubMenuActive)), document.querySelector("".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)), _options, getItemSettings(document.querySelector("".concat(_options.classMap.hasMegaMenuActive, ", ").concat(_options.classMap.hasSubMenuActive))))();\n            return;\n          } // Reset index\n\n\n          if (index < 0) {\n            index = 0;\n          }\n\n          $items[index].focus();\n        });\n        document.addEventListener(\'keyup\', function (e) {\n          // Close All\n          if (e.which === TAB_KEYCODE && document.querySelector("".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn))) {\n            Object(_methods_desktop_mouseleave_event_listener__WEBPACK_IMPORTED_MODULE_5__["default"])(document.querySelector("".concat(_options.classMap.hasMegaMenuActive, ", ").concat(_options.classMap.hasSubMenuActive)), document.querySelector("".concat(_options.classMap.megaMenu, ".").concat(_options.itemOptions.desktop.animationIn, ", ").concat(_options.classMap.subMenu, ".").concat(_options.itemOptions.desktop.animationIn)), _options, getItemSettings(document.querySelector("".concat(_options.classMap.hasMegaMenuActive, ", ").concat(_options.classMap.hasSubMenuActive))))();\n          }\n        }); // *****\n        // End: ACCESSIBILITY\n        // *****\n\n        that.collection[i].$initializedEl = _options;\n      };\n\n      for (var i = 0; i < that.collection.length; i += 1) {\n        var resolutionsList;\n        var ESC_KEYCODE, TAB_KEYCODE, ENTER_KEYCODE, SPACE_KEYCODE, ARROW_UP_KEYCODE, ARROW_DOWN_KEYCODE, ARROW_RIGHT_KEYCODE, ARROW_LEFT_KEYCODE;\n        var myPreventScrollSpace, myPreventScrollDown, myPreventScrollUp;\n\n        var _ret = _loop(i);\n\n        if (_ret === "continue") continue;\n      }\n    }\n  }, {\n    key: "MegaMenuItem",\n    value: function MegaMenuItem(el, menu, params) {\n      var context = this,\n          settings = params,\n          itemDataSettings = el.hasAttribute(\'data-hs-mega-menu-item-options\') ? JSON.parse(el.getAttribute(\'data-hs-mega-menu-item-options\')) : {},\n          $el = el,\n          $menu = menu;\n      var itemSettings = {\n        eventType: itemDataSettings.eventType ? itemDataSettings.eventType : settings.eventType,\n        megaMenuTimeOut: null,\n        desktop: {\n          animation: \'animated\',\n          animationIn: \'slideInUp\',\n          animationOut: false,\n          position: null,\n          maxWidth: null\n        }\n      };\n      itemSettings = _methods_object_assign_deep__WEBPACK_IMPORTED_MODULE_0___default()({}, settings, itemSettings, itemDataSettings);\n\n      itemSettings.activeItemClass = function () {\n        return Object(_methods_get_type__WEBPACK_IMPORTED_MODULE_1__["default"])($el, itemSettings) === \'mega-menu\' ? itemSettings.classMap.hasMegaMenuActive : itemSettings.classMap.hasSubMenuActive;\n      }; // Set Menu Breakpoint Class\n\n\n      $menu.classList.add(Object(_methods_get_type__WEBPACK_IMPORTED_MODULE_1__["default"])($el, itemSettings) === \'mega-menu\' ? "hs-mega-menu-desktop-".concat(itemSettings.breakpoint) : "hs-sub-menu-desktop-".concat(itemSettings.breakpoint)); // Listeners\n\n      var myDesktopCSSAnimationEnable = Object(_methods_desktop_css_animation_enable__WEBPACK_IMPORTED_MODULE_3__["default"])($menu, itemSettings),\n          myDesktopMouseEnterEventListener = Object(_methods_desktop_mouseenter_event_listener__WEBPACK_IMPORTED_MODULE_4__["default"])($el, $menu, settings, itemSettings),\n          myDesktopMouseLeaveEventListener = Object(_methods_desktop_mouseleave_event_listener__WEBPACK_IMPORTED_MODULE_5__["default"])($el, $menu, settings, itemSettings),\n          myDesktopClickEventListener = Object(_methods_desktop_click_event_listener__WEBPACK_IMPORTED_MODULE_6__["default"])($el, $menu, settings, itemSettings),\n          myMobileClickEventListener = Object(_methods_mobile_click_event_listener__WEBPACK_IMPORTED_MODULE_7__["default"])($el, $menu, settings, itemSettings);\n\n      var mobileListeners = function mobileListeners() {\n        // Remove Desktop Listeners\n        $menu.removeEventListener(\'animationend\', myDesktopCSSAnimationEnable, false);\n        $menu.removeEventListener(\'webkitAnimationEnd\', myDesktopCSSAnimationEnable, false);\n        $el.removeEventListener(\'mouseenter\', myDesktopMouseEnterEventListener, false);\n        $el.removeEventListener(\'mouseleave\', myDesktopMouseLeaveEventListener, false); // $el.children(settings.classMap.invoker)[0].removeEventListener(\'focus\', myDesktopMouseEnterEventListener, false);\n\n        $el.querySelector(itemSettings.classMap.invoker).removeEventListener(\'click\', myDesktopClickEventListener, false); // Add Mobile Listeners\n\n        $el.querySelector(itemSettings.classMap.invoker).addEventListener(\'click\', myMobileClickEventListener, false);\n      },\n          desktopListeners = function desktopListeners() {\n        // Remove Mobile Listeners\n        $el.querySelector(itemSettings.classMap.invoker).removeEventListener(\'click\', myMobileClickEventListener, false); // Add Desktop Listeners\n\n        $menu.addEventListener(\'animationend\', myDesktopCSSAnimationEnable, false);\n        $menu.addEventListener(\'webkitAnimationEnd\', myDesktopCSSAnimationEnable, false);\n\n        if (itemSettings.eventType === \'hover\') {\n          $el.addEventListener(\'mouseenter\', myDesktopMouseEnterEventListener, false);\n          $el.addEventListener(\'mouseleave\', myDesktopMouseLeaveEventListener, false);\n        }\n\n        if (itemSettings.eventType === \'click\') {\n          $el.querySelector(itemSettings.classMap.invoker).addEventListener(\'click\', myDesktopClickEventListener, false);\n        }\n      };\n\n      if (itemSettings.desktop.maxWidth) {\n        $menu.style.maxWidth = itemSettings.desktop.maxWidth;\n      }\n\n      if (itemSettings.desktop.position) {\n        $menu.classList.add("hs-position-".concat(itemSettings.desktop.position));\n      } // Document Events\n\n\n      document.addEventListener(\'click\', function (e) {\n        if (!e.target.closest([itemSettings.classMap.subMenu, itemSettings.classMap.megaMenu, itemSettings.classMap.invoker]) && context.state === \'desktop\') {\n          $el.classList.remove(itemSettings.activeItemClass().slice(1));\n          $menu.classList.remove(itemSettings.desktop.animationIn);\n\n          if (itemSettings.animationOut) {\n            $menu.classList.add(itemSettings.desktop.animationOut);\n          } else {\n            $menu.style.display = \'none\';\n          }\n        }\n      }); // Resize and Scroll Events\n\n      window.addEventListener(\'resize\', function () {\n        if (context.state === \'desktop\') {\n          Object(_methods_smart_position__WEBPACK_IMPORTED_MODULE_2__["default"])($menu, itemSettings);\n        }\n      });\n\n      var resizeDetection = function resizeDetection() {\n        if (context.state === \'mobile\') {\n          $menu.classList.remove(itemSettings.desktop.animation);\n          $menu.style.animationDuration = \'\';\n          mobileListeners();\n        } else if (context.state === \'desktop\') {\n          $menu.classList.add(itemSettings.desktop.animation);\n          $menu.style.animationDuration = "".concat(itemSettings.duration, "ms");\n          desktopListeners();\n        }\n      };\n\n      resizeDetection(); // State Detection\n\n      window.addEventListener(\'resize\', function () {\n        resizeDetection();\n      });\n    }\n  }, {\n    key: "addToCollection",\n    value: function addToCollection(item, options, id) {\n      this.collection.push({\n        $el: item,\n        id: id || null,\n        options: _methods_object_assign_deep__WEBPACK_IMPORTED_MODULE_0___default()({}, defaults, item.hasAttribute(dataAttributeName) ? JSON.parse(item.getAttribute(dataAttributeName)) : {}, options)\n      });\n    }\n  }, {\n    key: "getItems",\n    value: function getItems() {\n      var that = this;\n      var newCollection = [];\n\n      for (var i = 0; i < that.collection.length; i += 1) {\n        newCollection.push(that.collection[i].$initializedEl);\n      }\n\n      return newCollection;\n    }\n  }, {\n    key: "getItem",\n    value: function getItem(ind) {\n      return this.collection[ind].$initializedEl;\n    }\n  }]);\n\n  return HSMegaMenu;\n}();\n\n\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/hs-mega-menu.js?');
    },
    "./src/js/methods/desktop-click-event-listener.js": function srcJsMethodsDesktopClickEventListenerJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return desktopClickEventListener; });\n/* harmony import */ var _get_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-type */ "./src/js/methods/get-type.js");\n/* harmony import */ var _smart_position__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./smart-position */ "./src/js/methods/smart-position.js");\n/* harmony import */ var _desktop_show__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./desktop-show */ "./src/js/methods/desktop-show.js");\n/* harmony import */ var _desktop_hide__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./desktop-hide */ "./src/js/methods/desktop-hide.js");\n\n\n\n\nfunction desktopClickEventListener(el, menu, params, itemParams) {\n  return function () {\n    var $siblingInvokers = menu.closest("".concat(params.classMap.hasMegaMenu, ", ").concat(params.classMap.hasSubMenu)).parentNode.querySelectorAll("".concat(params.classMap.hasMegaMenu).concat(params.classMap.hasMegaMenuActive, ", ").concat(params.classMap.hasSubMenu).concat(params.classMap.hasSubMenuActive));\n\n    if ($siblingInvokers.length) {\n      $siblingInvokers.forEach(function ($el) {\n        if (el === $el) return;\n        var $menu = $el.querySelector("".concat(params.classMap.megaMenu, ", ").concat(params.classMap.subMenu)),\n            itemDataSettings = $el.hasAttribute(\'data-hs-mega-menu-item-options\') ? JSON.parse($el.getAttribute(\'data-hs-mega-menu-item-options\')) : {};\n        var itemSettings = {\n          desktop: {\n            animation: \'animated\',\n            animationIn: \'slideInUp\',\n            animationOut: \'fadeOut\',\n            position: null\n          }\n        };\n        itemSettings = Object.assign({}, itemSettings, itemDataSettings);\n\n        itemSettings.activeItemClass = function () {\n          return Object(_get_type__WEBPACK_IMPORTED_MODULE_0__["default"])($el, params) === \'mega-menu\' ? params.classMap.hasMegaMenuActive : params.classMap.hasSubMenuActive;\n        };\n\n        $el.classList.remove(itemSettings.activeItemClass().slice(1));\n        Object(_desktop_hide__WEBPACK_IMPORTED_MODULE_3__["default"])($el, $menu, params, itemSettings);\n      });\n    }\n\n    if (menu.offsetParent === null) {\n      el.classList.add(itemParams.activeItemClass().slice(1));\n      Object(_desktop_show__WEBPACK_IMPORTED_MODULE_2__["default"])(el, menu, params, itemParams);\n      Object(_smart_position__WEBPACK_IMPORTED_MODULE_1__["default"])(menu, params);\n    } else {\n      el.classList.remove(itemParams.activeItemClass().slice(1));\n      Object(_desktop_hide__WEBPACK_IMPORTED_MODULE_3__["default"])(el, menu, params, itemParams);\n    }\n  };\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/desktop-click-event-listener.js?');
    },
    "./src/js/methods/desktop-css-animation-enable.js": function srcJsMethodsDesktopCssAnimationEnableJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return desktopCSSAnimationEnable; });\nfunction desktopCSSAnimationEnable(menu, itemParams) {\n  return function (e) {\n    if (menu.classList.contains(itemParams.desktop.animationOut)) {\n      menu.classList.remove(itemParams.desktop.animationOut);\n      menu.style.display = 'none';\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/desktop-css-animation-enable.js?");
    },
    "./src/js/methods/desktop-hide.js": function srcJsMethodsDesktopHideJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return desktopHide; });\nfunction desktopHide(el, menu, params, itemParams) {\n  if (!menu) {\n    return this;\n  }\n\n  if (itemParams.desktop.animationOut) {\n    menu.classList.remove(itemParams.desktop.animationIn);\n    menu.classList.add(itemParams.desktop.animationOut);\n    menu.style.display = 'none';\n  } else {\n    menu.classList.remove(itemParams.desktop.animationIn);\n    menu.style.display = 'none';\n  }\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/desktop-hide.js?");
    },
    "./src/js/methods/desktop-mouseenter-event-listener.js": function srcJsMethodsDesktopMouseenterEventListenerJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return desktopMouseEnterEventListener; });\n/* harmony import */ var _smart_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./smart-position */ "./src/js/methods/smart-position.js");\n/* harmony import */ var _desktop_show__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./desktop-show */ "./src/js/methods/desktop-show.js");\n/* harmony import */ var _get_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./get-type */ "./src/js/methods/get-type.js");\n/* harmony import */ var _desktop_hide__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./desktop-hide */ "./src/js/methods/desktop-hide.js");\n\n\n\n\nfunction desktopMouseEnterEventListener(el, menu, params, itemParams) {\n  return function () {\n    if (itemParams.megaMenuTimeOut) {\n      clearTimeout(itemParams.megaMenuTimeOut);\n    }\n\n    var $siblingInvokers = menu.closest("".concat(params.classMap.hasMegaMenu, ", ").concat(params.classMap.hasSubMenu)).parentNode.querySelectorAll("".concat(params.classMap.hasMegaMenu).concat(params.classMap.hasMegaMenuActive, ", ").concat(params.classMap.hasSubMenu).concat(params.classMap.hasSubMenuActive));\n\n    if ($siblingInvokers.length) {\n      $siblingInvokers.forEach(function ($el) {\n        var $menu = $el.querySelector("".concat(params.classMap.megaMenu, ", ").concat(params.classMap.subMenu)),\n            itemDataSettings = $el.hasAttribute(\'data-hs-mega-menu-item-options\') ? JSON.parse($el.getAttribute(\'data-hs-mega-menu-item-options\')) : {};\n        var itemSettings = {\n          desktop: {\n            animation: \'animated\',\n            animationIn: \'slideInUp\',\n            animationOut: \'fadeOut\',\n            position: null\n          }\n        };\n        itemSettings = Object.assign({}, itemSettings, itemDataSettings);\n\n        itemSettings.activeItemClass = function () {\n          return Object(_get_type__WEBPACK_IMPORTED_MODULE_2__["default"])($el, params) === \'mega-menu\' ? params.classMap.hasMegaMenuActive : params.classMap.hasSubMenuActive;\n        };\n\n        $el.classList.remove(itemSettings.activeItemClass().slice(1));\n        Object(_desktop_hide__WEBPACK_IMPORTED_MODULE_3__["default"])($el, $menu, params, itemSettings);\n      });\n    }\n\n    el.classList.add(itemParams.activeItemClass().slice(1));\n    Object(_desktop_show__WEBPACK_IMPORTED_MODULE_1__["default"])(el, menu, params, itemParams);\n    Object(_smart_position__WEBPACK_IMPORTED_MODULE_0__["default"])(menu, params);\n  };\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/desktop-mouseenter-event-listener.js?');
    },
    "./src/js/methods/desktop-mouseleave-event-listener.js": function srcJsMethodsDesktopMouseleaveEventListenerJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return desktopMouseLeaveEventListener; });\n/* harmony import */ var _desktop_hide__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./desktop-hide */ "./src/js/methods/desktop-hide.js");\n\nfunction desktopMouseLeaveEventListener(el, menu, params, itemParams) {\n  return function () {\n    itemParams.megaMenuTimeOut = setTimeout(function () {\n      el.classList.remove(itemParams.activeItemClass().slice(1));\n      Object(_desktop_hide__WEBPACK_IMPORTED_MODULE_0__["default"])(el, menu, params, itemParams);\n    }, params.delay);\n  };\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/desktop-mouseleave-event-listener.js?');
    },
    "./src/js/methods/desktop-show.js": function srcJsMethodsDesktopShowJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return desktopShow; });\nfunction desktopShow(el, menu, params, itemParams) {\n  menu.classList.remove(itemParams.desktop.animationOut);\n  menu.style.display = 'block';\n  menu.classList.add(itemParams.desktop.animationIn);\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/desktop-show.js?");
    },
    "./src/js/methods/get-type.js": function srcJsMethodsGetTypeJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return getType; });\nfunction getType(el, params) {\n  if (!el) {\n    return false;\n  }\n\n  return el.classList.contains(params.classMap.hasSubMenu.slice(1)) ? 'sub-menu' : el.classList.contains(params.classMap.hasMegaMenu.slice(1)) ? 'mega-menu' : null;\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/get-type.js?");
    },
    "./src/js/methods/mobile-click-event-listener.js": function srcJsMethodsMobileClickEventListenerJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mobileClickEventListener; });\n/* harmony import */ var _get_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-type */ "./src/js/methods/get-type.js");\n/* harmony import */ var _mobile_show__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mobile-show */ "./src/js/methods/mobile-show.js");\n/* harmony import */ var _mobile_hide__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mobile-hide */ "./src/js/methods/mobile-hide.js");\n\n\n\nfunction mobileClickEventListener(el, menu, params, itemParams) {\n  return function () {\n    var $siblingInvokers = menu.closest("".concat(params.classMap.hasMegaMenu, ", ").concat(params.classMap.hasSubMenu)).parentNode.querySelectorAll("".concat(params.classMap.hasMegaMenu).concat(params.classMap.hasMegaMenuActive, ", ").concat(params.classMap.hasSubMenu).concat(params.classMap.hasSubMenuActive));\n\n    if ($siblingInvokers.length) {\n      $siblingInvokers.forEach(function ($el) {\n        var $menu = $el.querySelector("".concat(params.classMap.megaMenu, ", ").concat(params.classMap.subMenu)),\n            itemSettings = {};\n\n        itemSettings.activeItemClass = function () {\n          return Object(_get_type__WEBPACK_IMPORTED_MODULE_0__["default"])($el, params) === \'mega-menu\' ? params.classMap.hasMegaMenuActive : params.classMap.hasSubMenuActive;\n        };\n\n        Object(_mobile_hide__WEBPACK_IMPORTED_MODULE_2__["default"])($el, $menu, params, itemSettings);\n      });\n    }\n\n    if (menu.offsetParent === null) {\n      Object(_mobile_show__WEBPACK_IMPORTED_MODULE_1__["default"])(el, menu, params, itemParams);\n    } else {\n      Object(_mobile_hide__WEBPACK_IMPORTED_MODULE_2__["default"])(el, menu, params, itemParams);\n    }\n  };\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/mobile-click-event-listener.js?');
    },
    "./src/js/methods/mobile-hide.js": function srcJsMethodsMobileHideJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mobileHide; });\n/* harmony import */ var _slideUp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slideUp */ "./src/js/methods/slideUp.js");\n\nfunction mobileHide(el, menu, params, itemParams) {\n  if (!menu) {\n    return this;\n  }\n\n  el.classList.remove(itemParams.activeItemClass().slice(1));\n  Object(_slideUp__WEBPACK_IMPORTED_MODULE_0__["default"])(menu, params.mobileSpeed);\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/mobile-hide.js?');
    },
    "./src/js/methods/mobile-show.js": function srcJsMethodsMobileShowJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mobileShow; });\n/* harmony import */ var _slideDown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slideDown */ "./src/js/methods/slideDown.js");\n\nfunction mobileShow(el, menu, params, itemParams) {\n  if (!menu) {\n    return this;\n  }\n\n  el.classList.add(itemParams.activeItemClass().slice(1));\n  Object(_slideDown__WEBPACK_IMPORTED_MODULE_0__["default"])(menu, params.mobileSpeed);\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/mobile-show.js?');
    },
    "./src/js/methods/object-assign-deep.js": function srcJsMethodsObjectAssignDeepJs(module, exports, __webpack_require__) {
      "use strict";

      eval("\n/*\n * OBJECT ASSIGN DEEP\n * Allows deep cloning of plain objects that contain primitives, nested plain objects, or nested plain arrays.\n */\n\n/*\n * A unified way of returning a string that describes the type of the given variable.\n */\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction getTypeOf(input) {\n  if (input === null) {\n    return 'null';\n  } else if (typeof input === 'undefined') {\n    return 'undefined';\n  } else if (_typeof(input) === 'object') {\n    return Array.isArray(input) ? 'array' : 'object';\n  }\n\n  return _typeof(input);\n}\n/*\n * Branching logic which calls the correct function to clone the given value base on its type.\n */\n\n\nfunction cloneValue(value) {\n  // The value is an object so lets clone it.\n  if (getTypeOf(value) === 'object') {\n    return quickCloneObject(value);\n  } // The value is an array so lets clone it.\n  else if (getTypeOf(value) === 'array') {\n    return quickCloneArray(value);\n  } // Any other value can just be copied.\n\n\n  return value;\n}\n/*\n * Enumerates the given array and returns a new array, with each of its values cloned (i.e. references broken).\n */\n\n\nfunction quickCloneArray(input) {\n  return input.map(cloneValue);\n}\n/*\n * Enumerates the properties of the given object (ignoring the prototype chain) and returns a new object, with each of\n * its values cloned (i.e. references broken).\n */\n\n\nfunction quickCloneObject(input) {\n  var output = {};\n\n  for (var key in input) {\n    if (!Object.prototype.hasOwnProperty.call(input, key)) {\n      continue;\n    }\n\n    output[key] = cloneValue(input[key]);\n  }\n\n  return output;\n}\n/*\n * Does the actual deep merging.\n */\n\n\nfunction executeDeepMerge(target) {\n  var _objects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var _options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var options = {\n    arrayBehaviour: _options.arrayBehaviour || 'replace' // Can be \"merge\" or \"replace\".\n\n  }; // Ensure we have actual objects for each.\n\n  var objects = _objects.map(function (object) {\n    return object || {};\n  });\n\n  var output = target || {}; // Enumerate the objects and their keys.\n\n  for (var oindex = 0; oindex < objects.length; oindex++) {\n    var object = objects[oindex];\n    var keys = Object.keys(object);\n\n    for (var kindex = 0; kindex < keys.length; kindex++) {\n      var key = keys[kindex];\n      var value = object[key];\n      var type = getTypeOf(value);\n      var existingValueType = getTypeOf(output[key]);\n\n      if (type === 'object') {\n        if (existingValueType !== 'undefined') {\n          var existingValue = existingValueType === 'object' ? output[key] : {};\n          output[key] = executeDeepMerge({}, [existingValue, quickCloneObject(value)], options);\n        } else {\n          output[key] = quickCloneObject(value);\n        }\n      } else if (type === 'array') {\n        if (existingValueType === 'array') {\n          var newValue = quickCloneArray(value);\n          output[key] = options.arrayBehaviour === 'merge' ? output[key].concat(newValue) : newValue;\n        } else {\n          output[key] = quickCloneArray(value);\n        }\n      } else {\n        output[key] = value;\n      }\n    }\n  }\n\n  return output;\n}\n/*\n * Merge all the supplied objects into the target object, breaking all references, including those of nested objects\n * and arrays, and even objects nested inside arrays. The first parameter is not mutated unlike Object.assign().\n * Properties in later objects will always overwrite.\n */\n\n\nmodule.exports = function objectAssignDeep(target) {\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n\n  return executeDeepMerge(target, objects);\n};\n/*\n * Same as objectAssignDeep() except it doesn't mutate the target object and returns an entirely new object.\n */\n\n\nmodule.exports.noMutate = function objectAssignDeepInto() {\n  for (var _len2 = arguments.length, objects = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    objects[_key2] = arguments[_key2];\n  }\n\n  return executeDeepMerge({}, objects);\n};\n/*\n * Allows an options object to be passed in to customise the behaviour of the function.\n */\n\n\nmodule.exports.withOptions = function objectAssignDeepInto(target, objects, options) {\n  return executeDeepMerge(target, objects, options);\n};\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/object-assign-deep.js?");
    },
    "./src/js/methods/offset.js": function srcJsMethodsOffsetJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (function (el) {\n  if (!el) return false;\n  var rect = el.getBoundingClientRect();\n  return {\n    top: rect.top - window.scrollY,\n    left: rect.left - window.scrollX\n  };\n});\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/offset.js?');
    },
    "./src/js/methods/slideDown.js": function srcJsMethodsSlideDownJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\nvar slideDown = function slideDown(target) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  target.style.removeProperty('display');\n  var display = window.getComputedStyle(target).display;\n  if (display === 'none') display = 'block';\n  target.style.display = display;\n  var height = target.offsetHeight;\n  target.style.overflow = 'hidden';\n  target.style.height = 0;\n  target.style.paddingTop = 0;\n  target.style.paddingBottom = 0;\n  target.style.marginTop = 0;\n  target.style.marginBottom = 0;\n  target.offsetHeight;\n  target.style.boxSizing = 'border-box';\n  target.style.transitionProperty = \"height, margin, padding\";\n  target.style.transitionDuration = duration + 'ms';\n  target.style.height = height + 'px';\n  target.style.removeProperty('padding-top');\n  target.style.removeProperty('padding-bottom');\n  target.style.removeProperty('margin-top');\n  target.style.removeProperty('margin-bottom');\n  window.setTimeout(function () {\n    target.style.removeProperty('height');\n    target.style.removeProperty('overflow');\n    target.style.removeProperty('transition-duration');\n    target.style.removeProperty('transition-property');\n  }, duration);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (slideDown);\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/slideDown.js?");
    },
    "./src/js/methods/slideUp.js": function srcJsMethodsSlideUpJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\nvar slideUp = function slideUp(target) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  target.style.transitionProperty = 'height, margin, padding';\n  target.style.transitionDuration = duration + 'ms';\n  target.style.boxSizing = 'border-box';\n  target.style.height = target.offsetHeight + 'px';\n  target.offsetHeight;\n  target.style.overflow = 'hidden';\n  target.style.height = 0;\n  target.style.paddingTop = 0;\n  target.style.paddingBottom = 0;\n  target.style.marginTop = 0;\n  target.style.marginBottom = 0;\n  window.setTimeout(function () {\n    target.style.display = 'none';\n    target.style.removeProperty('height');\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n    target.style.removeProperty('overflow');\n    target.style.removeProperty('transition-duration');\n    target.style.removeProperty('transition-property'); //alert(\"!\");\n  }, duration);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (slideUp);\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/slideUp.js?");
    },
    "./src/js/methods/smart-position.js": function srcJsMethodsSmartPositionJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return smartPosition; });\n/* harmony import */ var _offset__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./offset */ "./src/js/methods/offset.js");\n\nfunction smartPosition(el, params) {\n  if (!el) return;\n\n  if (!params.rtl) {\n    if (Object(_offset__WEBPACK_IMPORTED_MODULE_0__["default"])(el).left + el.offsetWidth > window.innerWidth) {\n      el.classList.add(params.classMap.reversed.slice(1));\n    }\n  } else {\n    if (Object(_offset__WEBPACK_IMPORTED_MODULE_0__["default"])(el).left < 0) {\n      el.classList.add(params.classMap.reversed.slice(1));\n    }\n  }\n}\n\n//# sourceURL=webpack://HSMegaMenu/./src/js/methods/smart-position.js?');
    }
  }, e = {}, f.m = d, f.c = e, f.d = function (e, n, t) {
    f.o(e, n) || Object.defineProperty(e, n, {
      enumerable: !0,
      get: t
    });
  }, f.r = function (e) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
      value: "Module"
    }), Object.defineProperty(e, "__esModule", {
      value: !0
    });
  }, f.t = function (n, e) {
    if (1 & e && (n = f(n)), 8 & e) return n;
    if (4 & e && "object" == _typeof(n) && n && n.__esModule) return n;
    var t = Object.create(null);
    if (f.r(t), Object.defineProperty(t, "default", {
      enumerable: !0,
      value: n
    }), 2 & e && "string" != typeof n) for (var s in n) f.d(t, s, function (e) {
      return n[e];
    }.bind(null, s));
    return t;
  }, f.n = function (e) {
    var n = e && e.__esModule ? function () {
      return e["default"];
    } : function () {
      return e;
    };
    return f.d(n, "a", n), n;
  }, f.o = function (e, n) {
    return Object.prototype.hasOwnProperty.call(e, n);
  }, f.p = "", f(f.s = "./src/js/hs-mega-menu.js")["default"];
  function f(n) {
    if (e[n]) return e[n].exports;
    var t = e[n] = {
      i: n,
      l: !1,
      exports: {}
    };
    return d[n].call(t.exports, t, t.exports, f), t.l = !0, t.exports;
  }
  var d, e;
});

/***/ }),

/***/ "./assets/vendor/hs-sticky-block/dist/hs-sticky-block.min.js":
/*!*******************************************************************!*\
  !*** ./assets/vendor/hs-sticky-block/dist/hs-sticky-block.min.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! core-js/modules/es.symbol.to-string-tag.js */ "./node_modules/core-js/modules/es.symbol.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.json.to-string-tag.js */ "./node_modules/core-js/modules/es.json.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.math.to-string-tag.js */ "./node_modules/core-js/modules/es.math.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.object.create.js */ "./node_modules/core-js/modules/es.object.create.js");
__webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (t, e) {
  "object" == ( false ? 0 : _typeof(exports)) && "object" == ( false ? 0 : _typeof(module)) ? module.exports = e() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
}(window, function () {
  return d = {
    "./src/js/hs-sticky-block.js": function srcJsHsStickyBlockJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HSStickyBlock; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/*\n* HSStickyBlock Plugin\n* @version: 3.0.0 (Wed, 24 Nov 2021)\n* @author: HtmlStream\n* @event-namespace: .HSStickyBlock\n* @license: Htmlstream Libraries (https://htmlstream.com/)\n* Copyright 2021 Htmlstream\n*/\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n},\n    offset = function offset(el) {\n  el = _typeof(el) === "object" ? el : document.querySelector(el);\n  return {\n    top: el ? window.pageYOffset + el.getBoundingClientRect().top : 0,\n    left: el ? el.getBoundingClientRect().left : 0\n  };\n},\n    css = function css(el, style) {\n  el = _typeof(el) === "object" ? el : document.querySelector(el);\n\n  for (var property in style) {\n    el.style.setProperty(property, style[property], \'important\'); // el.style[property] = style[property]\n  }\n};\n\nvar dataAttributeName = \'data-hs-sticky-block-options\';\nvar defaults = {\n  parentSelector: null,\n  parentWidth: null,\n  parentPaddingLeft: null,\n  parentOffsetLeft: null,\n  targetSelector: null,\n  targetHeight: 0,\n  stickyHeight: null,\n  stickyOffsetTop: 0,\n  stickyOffsetBottom: 0,\n  windowOffsetTop: 0,\n  startPoint: null,\n  endPoint: null,\n  resolutionsList: {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200\n  },\n  breakpoint: \'lg\',\n  styles: {\n    position: \'fixed\'\n  },\n  classMap: {\n    kill: \'hs-kill-sticky\'\n  }\n};\n\nvar HSStickyBlock = /*#__PURE__*/function () {\n  function HSStickyBlock(el, options, id) {\n    _classCallCheck(this, HSStickyBlock);\n\n    this.collection = [];\n    var that = this;\n    var elems;\n\n    if (el instanceof HTMLElement) {\n      elems = [el];\n    } else if (el instanceof Object) {\n      elems = el;\n    } else {\n      elems = document.querySelectorAll(el);\n    }\n\n    for (var i = 0; i < elems.length; i += 1) {\n      that.addToCollection(elems[i], options, id || elems[i].id);\n    }\n\n    if (!that.collection.length) {\n      return false;\n    } // initialization calls\n\n\n    that._init();\n\n    return this;\n  }\n\n  _createClass(HSStickyBlock, [{\n    key: "_init",\n    value: function _init() {\n      var _this = this;\n\n      var that = this;\n      console.log(123);\n\n      var _loop = function _loop(i) {\n        var _$el = void 0;\n\n        var _options = void 0;\n\n        if (that.collection[i].hasOwnProperty(\'$initializedEl\')) {\n          return "continue";\n        }\n\n        _$el = that.collection[i].$el;\n        _options = that.collection[i].options;\n        Array(\'resize\', \'scroll\').forEach(function (evt) {\n          return window.addEventListener(evt, function () {\n            return _this.update(_$el, _options);\n          }, false);\n        });\n      };\n\n      for (var i = 0; i < that.collection.length; i += 1) {\n        var _ret = _loop(i);\n\n        if (_ret === "continue") continue;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update($el, settings) {\n      var that = this;\n\n      that._setRules($el, settings);\n    }\n  }, {\n    key: "_updateOptions",\n    value: function _updateOptions($el, settings) {\n      var parentSelector = document.querySelector(settings.parentSelector),\n          targetSelector = document.querySelector(settings.targetSelector);\n      settings.windowOffsetTop = window.pageYOffset;\n      settings.startPointPos = offset(settings.startPoint).top;\n      settings.endPointPos = offset(settings.endPoint).top;\n      settings.parentWidth = parentSelector ? parentSelector.clientWidth : 0;\n      settings.parentPaddingLeft = parentSelector ? parseInt(window.getComputedStyle(parentSelector).paddingLeft) : 0;\n      settings.parentOffsetLeft = offset(parentSelector).left;\n      settings.targetHeight = targetSelector ? targetSelector.offsetHeight : 0;\n      settings.stickyHeight = $el.offsetHeight;\n    }\n  }, {\n    key: "_setRules",\n    value: function _setRules($el, settings) {\n      var that = this;\n\n      that._kill($el, settings);\n\n      that._updateOptions($el, settings);\n\n      if (!$el.classList.contains(settings.classMap.kill)) {\n        if (settings.windowOffsetTop >= settings.startPointPos - settings.targetHeight - settings.stickyOffsetTop && settings.windowOffsetTop <= settings.endPointPos - settings.targetHeight - settings.stickyOffsetTop) {\n          that._add($el, settings);\n\n          that._top($el, settings);\n        } else {\n          that._reset($el);\n        }\n\n        if (settings.windowOffsetTop >= settings.endPointPos - settings.targetHeight - settings.stickyHeight - settings.stickyOffsetTop - settings.stickyOffsetBottom) {\n          that._bottom($el, settings);\n        }\n      }\n    }\n  }, {\n    key: "_add",\n    value: function _add($el, settings) {\n      css($el, {\n        position: settings.styles.position,\n        left: settings.parentOffsetLeft + settings.parentPaddingLeft + \'px\',\n        width: settings.parentWidth + \'px\'\n      });\n    }\n  }, {\n    key: "_top",\n    value: function _top($el, settings) {\n      css($el, {\n        top: settings.stickyOffsetTop + settings.targetHeight + \'px\'\n      });\n    }\n  }, {\n    key: "_bottom",\n    value: function _bottom($el, settings) {\n      css($el, {\n        top: settings.endPointPos - settings.windowOffsetTop - settings.stickyHeight - settings.stickyOffsetBottom + \'px\'\n      });\n    }\n  }, {\n    key: "_reset",\n    value: function _reset($el, settings) {\n      css($el, {\n        position: \'\',\n        top: \'\',\n        bottom: \'\',\n        left: \'\',\n        width: \'\'\n      });\n    }\n  }, {\n    key: "_kill",\n    value: function _kill($el, settings) {\n      var that = this;\n\n      if (window.innerWidth < settings.resolutionsList[settings.breakpoint]) {\n        $el.classList.add(settings.classMap.kill);\n\n        that._reset($el);\n      } else {\n        $el.classList.remove(settings.classMap.kill);\n      }\n    }\n  }, {\n    key: "addToCollection",\n    value: function addToCollection(item, options, id) {\n      this.collection.push({\n        $el: item,\n        id: id || null,\n        options: Object.assign({}, defaults, item.hasAttribute(dataAttributeName) ? JSON.parse(item.getAttribute(dataAttributeName)) : {}, options)\n      });\n    }\n  }, {\n    key: "getItem",\n    value: function getItem(item) {\n      if (typeof item === \'number\') {\n        return this.collection[item].$initializedEl;\n      } else {\n        return this.collection.find(function (el) {\n          return el.id === item;\n        }).$initializedEl;\n      }\n    }\n  }]);\n\n  return HSStickyBlock;\n}();\n\n\n\n//# sourceURL=webpack://HSStickyBlock/./src/js/hs-sticky-block.js?');
    }
  }, e = {}, f.m = d, f.c = e, f.d = function (t, e, n) {
    f.o(t, e) || Object.defineProperty(t, e, {
      enumerable: !0,
      get: n
    });
  }, f.r = function (t) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
      value: "Module"
    }), Object.defineProperty(t, "__esModule", {
      value: !0
    });
  }, f.t = function (e, t) {
    if (1 & t && (e = f(e)), 8 & t) return e;
    if (4 & t && "object" == _typeof(e) && e && e.__esModule) return e;
    var n = Object.create(null);
    if (f.r(n), Object.defineProperty(n, "default", {
      enumerable: !0,
      value: e
    }), 2 & t && "string" != typeof e) for (var i in e) f.d(n, i, function (t) {
      return e[t];
    }.bind(null, i));
    return n;
  }, f.n = function (t) {
    var e = t && t.__esModule ? function () {
      return t["default"];
    } : function () {
      return t;
    };
    return f.d(e, "a", e), e;
  }, f.o = function (t, e) {
    return Object.prototype.hasOwnProperty.call(t, e);
  }, f.p = "", f(f.s = "./src/js/hs-sticky-block.js")["default"];
  function f(t) {
    if (e[t]) return e[t].exports;
    var n = e[t] = {
      i: t,
      l: !1,
      exports: {}
    };
    return d[t].call(n.exports, n, n.exports, f), n.l = !0, n.exports;
  }
  var d, e;
});

/***/ }),

/***/ "./assets/vendor/hs-video-bg/dist/hs-video-bg.min.js":
/*!***********************************************************!*\
  !*** ./assets/vendor/hs-video-bg/dist/hs-video-bg.min.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! core-js/modules/es.symbol.to-string-tag.js */ "./node_modules/core-js/modules/es.symbol.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.json.to-string-tag.js */ "./node_modules/core-js/modules/es.json.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.math.to-string-tag.js */ "./node_modules/core-js/modules/es.math.to-string-tag.js");
__webpack_require__(/*! core-js/modules/es.object.create.js */ "./node_modules/core-js/modules/es.object.create.js");
__webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (e, t) {
  "object" == ( false ? 0 : _typeof(exports)) && "object" == ( false ? 0 : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
}(window, function () {
  return d = {
    "./src/js/hs-video-bg.js": function srcJsHsVideoBgJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return HSVideoBg; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/js/utils/index.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n* HSVideoBg Plugin\n* @version: 3.0.0 (Wed, 17 Mar 2021)\n* @author: HtmlStream\n* @event-namespace: .HSVideoBg\n* @license: Htmlstream Libraries (https://htmlstream.com/)\n* Copyright 2021 Htmlstream\n*/\n\n\nvar HSVideoBg = /*#__PURE__*/function () {\n  function HSVideoBg(el, settings) {\n    _classCallCheck(this, HSVideoBg);\n\n    this.$el = typeof el === \"string\" ? document.querySelector(el) : el;\n    this.defaults = {\n      type: 'default',\n      videoId: null,\n      isLoop: true,\n      ratio: 1.5\n    };\n    this.dataSettings = this.$el.hasAttribute('data-hs-video-bg-options') ? JSON.parse(this.$el.getAttribute('data-hs-video-bg-options')) : {};\n    this.settings = Object.assign({}, this.defaults, this.dataSettings, settings);\n  }\n\n  _createClass(HSVideoBg, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      this._prepareObject();\n\n      if (this.settings.type === 'you-tube') {\n        this._APICreating('//www.youtube.com/player_api', 'YT', 'YTDetect').then(function () {\n          var newYT;\n\n          if (typeof window.onYouTubeIframeAPIReady === 'function') {\n            setTimeout(function () {\n              newYT = new YT.Player(_this.$el.querySelector('.hs-video-bg-video > div'), {\n                videoId: _this.settings.videoId,\n                playerVars: {\n                  autoplay: true,\n                  controls: 0,\n                  showinfo: 0,\n                  enablejsapi: 1,\n                  modestbranding: 1,\n                  iv_load_policy: 3,\n                  loop: _this.settings.isLoop,\n                  playlist: _this.settings.videoId,\n                  origin: window.location.origin\n                },\n                events: {\n                  onReady: function onReady(e) {\n                    e.target.mute();\n\n                    _this._ratioCalc();\n\n                    window.addEventListener('resize', function () {\n                      _this._ratioCalc();\n                    });\n                    Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"fadeOut\"])(_this.$el.querySelector('.hs-video-bg-preview'), 400);\n                  }\n                }\n              });\n            }, 100);\n          } else {\n            window.onYouTubeIframeAPIReady = function () {\n              newYT = new YT.Player(_this.$el.querySelector('.hs-video-bg-video > div'), {\n                videoId: _this.settings.videoId,\n                playerVars: {\n                  autoplay: true,\n                  controls: 0,\n                  showinfo: 0,\n                  enablejsapi: 1,\n                  modestbranding: 1,\n                  iv_load_policy: 3,\n                  loop: _this.settings.isLoop,\n                  playlist: _this.settings.videoId,\n                  origin: window.location.origin\n                },\n                events: {\n                  onReady: function onReady(e) {\n                    e.target.mute();\n\n                    _this._ratioCalc();\n\n                    window.addEventListener('resize', function () {\n                      _this._ratioCalc();\n                    });\n                    Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"fadeOut\"])(_this.$el.querySelector('.hs-video-bg-preview'), 400);\n                  }\n                }\n              });\n            };\n          }\n        });\n      } else if (this.settings.type === 'vimeo') {\n        this._APICreating('//player.vimeo.com/api/player.js', 'Vimeo', 'VimeoDetect').then(function () {\n          var newVimeo = new Vimeo.Player(_this.$el.querySelector('.hs-video-bg-video'), {\n            id: _this.settings.videoId,\n            loop: _this.settings.isLoop,\n            title: false,\n            portrait: false,\n            byline: false,\n            autoplay: true,\n            autopause: false,\n            muted: true\n          });\n          newVimeo.play().then(function () {\n            _this._ratioCalc();\n\n            window.addEventListener('resize', function () {\n              _this._ratioCalc();\n            });\n            Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"fadeOut\"])(_this.$el.querySelector('.hs-video-bg-preview'), 400);\n          });\n        });\n      } else {\n        window.addEventListener('resize', function () {\n          _this._ratioCalc();\n        });\n        setTimeout(function () {\n          _this._ratioCalc();\n        });\n      }\n    }\n  }, {\n    key: \"_prepareObject\",\n    value: function _prepareObject() {\n      var _this2 = this;\n\n      this.$el.style.position = 'relative';\n\n      if (this.settings.type === 'you-tube') {\n        this.$el.insertAdjacentHTML('beforeend', '<div class=\"hs-video-bg-video\"><div></div></div>');\n      } else if (this.settings.type === 'vimeo') {\n        this.$el.insertAdjacentHTML('beforeend', '<div class=\"hs-video-bg-video\"></div>');\n      } else {\n        this.$el.insertAdjacentHTML('beforeend', \"\\n\\t\\t\\t\\t<div class=\\\"hs-video-bg-video\\\">\\n\\t\\t\\t\\t\\t<video poster=\\\"\\\" autoplay muted \".concat(this.settings.isLoop ? 'loop' : '', \">\\n\\t\\t\\t\\t\\t\\t<source src=\\\"\").concat(this.settings.videoId, \".mp4\\\" type=\\\"video/mp4\\\">\\n\\t\\t\\t\\t\\t\\t<source src=\\\"\").concat(this.settings.videoId, \".webm\\\" type=\\\"video/webm\\\">\\n\\t\\t\\t\\t\\t\\t<source src=\\\"\").concat(this.settings.videoId, \".ogv\\\" type=\\\"video/ogg\\\">\\n\\t\\t\\t\\t\\t\\tYour browser doesn't support HTML5 video.\\n\\t\\t\\t\\t\\t</video>\\n        </div>\\n\\t\\t\\t\"));\n      }\n\n      if (this.settings.type === 'you-tube') {\n        this.$el.insertAdjacentHTML('beforeend', \"<div class=\\\"hs-video-bg-preview\\\" style=\\\"background-image: url(//img.youtube.com/vi/\".concat(this.settings.videoId, \"/maxresdefault.jpg);\\\"></div>\"));\n      } else if (this.settings.type === 'vimeo') {\n        fetch(\"//www.vimeo.com/api/v2/video/\".concat(this.settings.videoId, \".json?callback=?\")).then(function (data) {\n          _this2.$el.insertAdjacentHTML('beforeend', \"<div class=\\\"hs-video-bg-preview\\\" style=\\\"background-image: url(\".concat(data[0].thumbnail_large, \");\\\"></div>\"));\n        });\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"_ratioCalc\",\n    value: function _ratioCalc() {\n      var _ratio = this.$el.clientWidth / this.$el.clientHeight;\n\n      var $videoBg = this.$el.querySelector('.hs-video-bg-video');\n      if (!$videoBg) return false;\n\n      if (this.settings.type === 'you-tube' || this.settings.type === 'vimeo') {\n        if (this.$el.clientHeight < this.$el.clientWidth && window.innerWidth > 768) {\n          $videoBg.style.width = _ratio * this.$el.clientWidth * this.settings.ratio;\n          $videoBg.style.height = _ratio * this.$el.clientHeight * this.settings.ratio;\n        } else {\n          $videoBg.style.width = _ratio * this.$el.clientWidth;\n          $videoBg.style.height = '130%';\n        }\n      }\n    }\n  }, {\n    key: \"_APICreating\",\n    value: function _APICreating(scriptUrl, globalName, globalNameDetect) {\n      if (window[globalNameDetect]) {\n        return Promise.resolve();\n      }\n\n      return new Promise(function (resolve, reject) {\n        var script = document.createElement('script'),\n            before = document.querySelector('script');\n        script.src = scriptUrl;\n        before.parentNode.insertBefore(script, before);\n\n        script.onload = function () {\n          !globalName || window[globalName] ? resolve() : reject(Error('window.' + globalName + ' undefined'));\n        };\n\n        script.onerror = function () {\n          reject(Error('Error loading ' + globalName || false));\n        };\n      });\n    }\n  }]);\n\n  return HSVideoBg;\n}();\n\n\n\n//# sourceURL=webpack://HSVideoBg/./src/js/hs-video-bg.js?");
    },
    "./src/js/utils/index.js": function srcJsUtilsIndexJs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fadeOut\", function() { return fadeOut; });\nfunction fadeOut(el, time) {\n  if (!el || el.offsetParent === null) return el;\n\n  if (!time) {\n    return el.style.display = 'none';\n  }\n\n  var intervalID = setInterval(function () {\n    if (!el.style.opacity) {\n      el.style.opacity = 1;\n    }\n\n    if (el.style.opacity > 0) {\n      el.style.opacity -= 0.1;\n    } else {\n      clearInterval(intervalID);\n      el.style.display = 'none';\n    }\n  }, time / 10);\n}\n\n//# sourceURL=webpack://HSVideoBg/./src/js/utils/index.js?");
    }
  }, e = {}, f.m = d, f.c = e, f.d = function (e, t, n) {
    f.o(e, t) || Object.defineProperty(e, t, {
      enumerable: !0,
      get: n
    });
  }, f.r = function (e) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
      value: "Module"
    }), Object.defineProperty(e, "__esModule", {
      value: !0
    });
  }, f.t = function (t, e) {
    if (1 & e && (t = f(t)), 8 & e) return t;
    if (4 & e && "object" == _typeof(t) && t && t.__esModule) return t;
    var n = Object.create(null);
    if (f.r(n), Object.defineProperty(n, "default", {
      enumerable: !0,
      value: t
    }), 2 & e && "string" != typeof t) for (var i in t) f.d(n, i, function (e) {
      return t[e];
    }.bind(null, i));
    return n;
  }, f.n = function (e) {
    var t = e && e.__esModule ? function () {
      return e["default"];
    } : function () {
      return e;
    };
    return f.d(t, "a", t), t;
  }, f.o = function (e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
  }, f.p = "", f(f.s = "./src/js/hs-video-bg.js")["default"];
  function f(t) {
    if (e[t]) return e[t].exports;
    var n = e[t] = {
      i: t,
      l: !1,
      exports: {}
    };
    return d[t].call(n.exports, n, n.exports, f), n.l = !0, n.exports;
  }
  var d, e;
});

/***/ }),

/***/ "./assets/styles/app.css":
/*!*******************************!*\
  !*** ./assets/styles/app.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./assets/styles/theme.min.css":
/*!*************************************!*\
  !*** ./assets/styles/theme.min.css ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./assets/vendor/bootstrap-icons/font/bootstrap-icons.css":
/*!****************************************************************!*\
  !*** ./assets/vendor/bootstrap-icons/font/bootstrap-icons.css ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./assets/vendor/hs-mega-menu/dist/hs-mega-menu.min.css":
/*!**************************************************************!*\
  !*** ./assets/vendor/hs-mega-menu/dist/hs-mega-menu.min.css ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./assets/vendor/hs-video-bg/dist/hs-video-bg.css":
/*!********************************************************!*\
  !*** ./assets/vendor/hs-video-bg/dist/hs-video-bg.css ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./assets/vendor/swiper/swiper-bundle.css":
/*!************************************************!*\
  !*** ./assets/vendor/swiper/swiper-bundle.css ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendors-node_modules_symfony_stimulus-bridge_dist_index_js-node_modules_bootstrap_dist_js_boo-1a78fb"], () => (__webpack_exec__("./assets/app.js")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,